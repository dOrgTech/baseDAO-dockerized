cabal-version: 2.2

-- This file has been generated from package.yaml by hpack version 0.34.3.
--
-- see: https://github.com/sol/hpack

name:           baseDAO-ligo-meta
version:        0.2.0.0
description:    Tools and tests for the LIGO baseDAO contract.
author:         Serokell, Tocqueville Group
maintainer:     Serokell, Tocqueville Group
copyright:      2021 TQ Tezos
license:        MIT
license-file:   LICENSE
build-type:     Simple
extra-source-files:
    README.md

source-repository head
  type: git
  location: git@github.com:tqtezos/baseDAO.git

library
  exposed-modules:
      Ligo.BaseDAO.Common.Types
      Ligo.BaseDAO.Types
      Ligo.BaseDAO.TZIP16Metadata
      Ligo.Typescript
      Ligo.Util
  other-modules:
      Paths_baseDAO_ligo_meta
  autogen-modules:
      Paths_baseDAO_ligo_meta
  hs-source-dirs:
      src
  default-extensions: AllowAmbiguousTypes BangPatterns BlockArguments ConstraintKinds DataKinds DefaultSignatures DeriveAnyClass DeriveDataTypeable DeriveFoldable DeriveFunctor DeriveGeneric DeriveTraversable DerivingStrategies DerivingVia EmptyCase ExistentialQuantification FlexibleContexts FlexibleInstances GADTs GeneralizedNewtypeDeriving LambdaCase MultiParamTypeClasses MultiWayIf NamedFieldPuns NegativeLiterals NoImplicitPrelude NumDecimals OverloadedLabels OverloadedStrings PatternSynonyms PolyKinds QuasiQuotes RankNTypes RecordWildCards RecursiveDo ScopedTypeVariables StandaloneDeriving StrictData TemplateHaskell TupleSections TypeApplications TypeFamilies TypeOperators UndecidableInstances UndecidableSuperClasses ViewPatterns RebindableSyntax
  ghc-options: -Weverything -Wno-missing-exported-signatures -Wno-missing-import-lists -Wno-missed-specialisations -Wno-all-missed-specialisations -Wno-unsafe -Wno-safe -Wno-missing-local-signatures -Wno-monomorphism-restriction -Wno-implicit-prelude -Wno-unused-packages -Wno-prepositive-qualified-module -Wno-missing-safe-haskell-mode -Wno-unused-do-bind
  build-depends:
      base-noprelude >=4.7 && <5
    , cleveland
    , containers
    , data-default
    , directory
    , filepath
    , fmt
    , lens
    , lorentz
    , morley
    , morley-client
    , morley-ledgers
    , morley-metadata
    , morley-prelude
    , named
    , template-haskell
    , text
    , universum
  default-language: Haskell2010

executable baseDAO-ligo-meta
  main-is: Main.hs
  other-modules:
      Paths_baseDAO_ligo_meta
  hs-source-dirs:
      app
  default-extensions: AllowAmbiguousTypes BangPatterns BlockArguments ConstraintKinds DataKinds DefaultSignatures DeriveAnyClass DeriveDataTypeable DeriveFoldable DeriveFunctor DeriveGeneric DeriveTraversable DerivingStrategies DerivingVia EmptyCase ExistentialQuantification FlexibleContexts FlexibleInstances GADTs GeneralizedNewtypeDeriving LambdaCase MultiParamTypeClasses MultiWayIf NamedFieldPuns NegativeLiterals NoImplicitPrelude NumDecimals OverloadedLabels OverloadedStrings PatternSynonyms PolyKinds QuasiQuotes RankNTypes RecordWildCards RecursiveDo ScopedTypeVariables StandaloneDeriving StrictData TemplateHaskell TupleSections TypeApplications TypeFamilies TypeOperators UndecidableInstances UndecidableSuperClasses ViewPatterns
  ghc-options: -Weverything -Wno-missing-exported-signatures -Wno-missing-import-lists -Wno-missed-specialisations -Wno-all-missed-specialisations -Wno-unsafe -Wno-safe -Wno-missing-local-signatures -Wno-monomorphism-restriction -Wno-implicit-prelude -Wno-unused-packages -Wno-prepositive-qualified-module -Wno-missing-safe-haskell-mode
  build-depends:
      aeson-pretty
    , base-noprelude >=4.7 && <5
    , baseDAO-ligo-meta
    , fmt
    , morley
    , morley-ledgers
    , morley-prelude
    , optparse-applicative
    , universum
  default-language: Haskell2010

test-suite baseDAO-test
  type: exitcode-stdio-1.0
  main-is: Main.hs
  other-modules:
      Ligo.BaseDAO.Contract
      Test.Ligo.BaseDAO.Common
      Test.Ligo.BaseDAO.Common.StorageHelper
      Test.Ligo.BaseDAO.FA2
      Test.Ligo.BaseDAO.Integrational.Common
      Test.Ligo.BaseDAO.Integrational.Proposal
      Test.Ligo.BaseDAO.Management
      Test.Ligo.BaseDAO.OffChainViews
      Test.Ligo.BaseDAO.Proposal
      Test.Ligo.BaseDAO.Proposal.Config
      Test.Ligo.BaseDAO.Proposal.Proposal
      Test.Ligo.BaseDAO.Proposal.Vote
      Test.Ligo.BaseDAO.Token
      Test.Ligo.BaseDAO.Token.BalanceOf
      Test.Ligo.BaseDAO.Token.Common
      Test.Ligo.BaseDAO.Token.Transfer
      Test.Ligo.BaseDAO.Token.UpdateOperators
      Test.Ligo.BaseDAO.Types
      Test.Ligo.RegistryDAO
      Test.Ligo.TreasuryDAO
      Paths_baseDAO_ligo_meta
  hs-source-dirs:
      test
  default-extensions: AllowAmbiguousTypes BangPatterns BlockArguments ConstraintKinds DataKinds DefaultSignatures DeriveAnyClass DeriveDataTypeable DeriveFoldable DeriveFunctor DeriveGeneric DeriveTraversable DerivingStrategies DerivingVia EmptyCase ExistentialQuantification FlexibleContexts FlexibleInstances GADTs GeneralizedNewtypeDeriving LambdaCase MultiParamTypeClasses MultiWayIf NamedFieldPuns NegativeLiterals NoImplicitPrelude NumDecimals OverloadedLabels OverloadedStrings PatternSynonyms PolyKinds QuasiQuotes RankNTypes RecordWildCards RecursiveDo ScopedTypeVariables StandaloneDeriving StrictData TemplateHaskell TupleSections TypeApplications TypeFamilies TypeOperators UndecidableInstances UndecidableSuperClasses ViewPatterns
  ghc-options: -Weverything -Wno-missing-exported-signatures -Wno-missing-import-lists -Wno-missed-specialisations -Wno-all-missed-specialisations -Wno-unsafe -Wno-safe -Wno-missing-local-signatures -Wno-monomorphism-restriction -Wno-implicit-prelude -Wno-unused-packages -Wno-prepositive-qualified-module -Wno-missing-safe-haskell-mode -threaded -eventlog "-with-rtsopts=-N -A64m -AL256m"
  build-tool-depends:
      tasty-discover:tasty-discover
  build-depends:
      HUnit
    , base-noprelude >=4.7 && <5
    , baseDAO-ligo-meta
    , bytestring
    , cleveland
    , containers
    , fmt
    , lens
    , lorentz
    , morley
    , morley-ledgers
    , morley-metadata
    , morley-prelude
    , named
    , o-clock
    , tasty
    , tasty-hunit-compat
    , universum
  default-language: Haskell2010
