(Pair (Pair (Pair (Pair (Pair "tz1ZQnHjvi25qQzoo9AFThPukMmieP6e4sk2" {})
                        { Elt "frozen_extra_value" 0x050005 ;
                          Elt "frozen_scale_value" 0x050000 ;
                          Elt "max_proposal_size" 0x05008427 ;
                          Elt "max_xtz_amount" 0x05008084af5f ;
                          Elt "min_xtz_amount" 0x050000 ;
                          Elt "proposal_receivers" 0x050200000000 ;
                          Elt "registry" 0x050200000000 ;
                          Elt "registry_affected" 0x050200000000 ;
                          Elt "slash_division_value" 0x0500a401 ;
                          Elt "slash_scale_value" 0x05009b01 }
                        {})
                  (Pair 0 0)
                  (Pair "KT1VmjmVXhGeUKeUcVMr1zEefvi4969eTAug" 0)
                  "tz1ZQnHjvi25qQzoo9AFThPukMmieP6e4sk2")
            (Pair (Pair { Elt ""
                              0x74657a6f732d73746f726167653a2f2f4b543153754a727959357546595858583937617038614e386b443971644c31774631674a2f6d657461646174614b6579 }
                        "tz1ZQnHjvi25qQzoo9AFThPukMmieP6e4sk2")
                  0
                  {})
            (Pair {} (Pair 1 200000) 0)
            {}
            100)
      (Pair (Pair (Pair { Elt "lookup_registry"
                              0x05020000016707430765075e076503680369076003680368075e0765036807610368036907650368036907070200000027037a034c050d076003680368072f020000000b0743036200ae01034203270200000004034c03200200000025037a0321057100020329072f020000000b0743036200b001034203270200000004034c0342034202000000e4037a037a05700002037a0743036801000000156c6f6f6b75705f72656769737472795f706172616d034c050d0765046800000004256b6579046e000000092563616c6c6261636b072f020000000b0743036200ae01034203270200000004034c03200321031705550765036805630368072f02000000090743036200b4010327020000000005210003031603160316031703160743036801000000087265676973747279034205700005034c032605700004034c0326034c0743036a00000570000205210004031603290570000303160342034d034c0316053d036d05700002031b0342 }
                        { PUSH (pair (lambda
                                        (pair (pair (set address) (list address)) (lambda (pair (set address) address) (set address)))
                                        (set address))
                                     (lambda
                                        bytes
                                        (or (or (or (pair (pair (pair (option nat) (option nat)) (option nat) (option nat)) (option nat))
                                                    (pair (pair nat (list (pair string (option string))))
                                                          (list (or (pair mutez address) (pair address (list (pair address (list (pair address nat nat)))))))))
                                                (or (option key_hash) address))
                                            (or (list address) (list address))))
                                     (lambda (pair string bytes) (map string string))
                                     (lambda (pair string (big_map string bytes)) (pair string bytes)))
                               (Pair { UNPAIR ;
                                       UNPAIR ;
                                       SWAP ;
                                       ITER { SWAP ; PAIR ; SWAP ; DUP ; DUG 2 ; SWAP ; EXEC } ;
                                       SWAP ;
                                       DROP }
                                     { UNPACK
                                         (or (or (or (pair %configuration_proposal
                                                        (pair (pair (option %frozen_extra_value nat) (option %frozen_scale_value nat))
                                                              (pair (option %max_proposal_size nat) (option %slash_division_value nat)))
                                                        (option %slash_scale_value nat))
                                                     (pair %transfer_proposal
                                                        (pair (nat %agora_post_id) (list %registry_diff (pair string (option string))))
                                                        (list %transfers
                                                           (or (pair %xtz_transfer_type (mutez %amount) (address %recipient))
                                                               (pair %token_transfer_type
                                                                  (address %contract_address)
                                                                  (list %transfer_list
                                                                     (pair (address %from_)
                                                                           (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))))))))
                                                 (or (option %update_contract_delegate key_hash) (address %update_guardian)))
                                             (or %update_receivers_proposal
                                                (list %add_receivers address)
                                                (list %remove_receivers address))) ;
                                       IF_NONE { PUSH nat 111 ; FAILWITH } {} }
                                     { UNPAIR ;
                                       SWAP ;
                                       UNPACK (map string string) ;
                                       IF_NONE { PUSH nat 110 ; PAIR ; FAILWITH } { SWAP ; DROP } }
                                     { UNPAIR ;
                                       DUP ;
                                       DUG 2 ;
                                       GET ;
                                       IF_NONE { PUSH nat 112 ; PAIR ; FAILWITH } { SWAP ; PAIR } }) ;
                          PAIR ;
                          { UNPAIR ;
                            UNPAIR 4 ;
                            DIG 4 ;
                            DUP ;
                            CAR ;
                            SWAP ;
                            CDR ;
                            NIL operation ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CAR ;
                            CAR ;
                            CDR ;
                            DIG 5 ;
                            SWAP ;
                            EXEC ;
                            IF_LEFT
                              { DIG 4 ;
                                DROP ;
                                IF_LEFT
                                  { IF_LEFT
                                      { DIG 2 ;
                                        DIG 4 ;
                                        DIG 5 ;
                                        DROP 3 ;
                                        DUP ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        IF_NONE
                                          { DIG 2 }
                                          { DIG 3 ; SWAP ; PACK ; SOME ; PUSH string "frozen_scale_value" ; UPDATE } ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        IF_NONE {} { PACK ; SOME ; PUSH string "frozen_extra_value" ; UPDATE } ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        IF_NONE {} { PACK ; SOME ; PUSH string "max_proposal_size" ; UPDATE } ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        IF_NONE {} { PACK ; SOME ; PUSH string "slash_scale_value" ; UPDATE } ;
                                        DIG 2 ;
                                        NONE address ;
                                        DIG 3 ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        IF_NONE
                                          { DIG 2 }
                                          { DIG 3 ; SWAP ; PACK ; SOME ; PUSH string "slash_division_value" ; UPDATE } ;
                                        PAIR ;
                                        PAIR }
                                      { DUP ;
                                        CAR ;
                                        CDR ;
                                        DIG 4 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        PUSH string "registry" ;
                                        PAIR ;
                                        DUP 9 ;
                                        SWAP ;
                                        EXEC ;
                                        DIG 7 ;
                                        SWAP ;
                                        EXEC ;
                                        SWAP ;
                                        ITER { UNPAIR ; UPDATE } ;
                                        PACK ;
                                        SOME ;
                                        PUSH string "registry" ;
                                        UPDATE ;
                                        SWAP ;
                                        DUP 5 ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        DUP 6 ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        DIG 6 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        PACK ;
                                        BLAKE2B ;
                                        DUP 3 ;
                                        PUSH string "registry_affected" ;
                                        PAIR ;
                                        DIG 6 ;
                                        SWAP ;
                                        EXEC ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPACK (map string bytes) ;
                                        IF_NONE { PUSH nat 110 ; PAIR ; FAILWITH } { SWAP ; DROP } ;
                                        DIG 2 ;
                                        ITER { SWAP ; DUP 3 ; SOME ; DIG 2 ; CAR ; UPDATE } ;
                                        SWAP ;
                                        DROP ;
                                        PACK ;
                                        SOME ;
                                        PUSH string "registry_affected" ;
                                        UPDATE ;
                                        DUG 2 ;
                                        CDR ;
                                        ITER { IF_LEFT
                                                 { DUP ;
                                                   CDR ;
                                                   CONTRACT unit ;
                                                   IF_NONE
                                                     { DROP 2 ; PUSH nat 121 ; FAILWITH }
                                                     { DIG 2 ; SWAP ; DIG 2 ; CAR ; UNIT ; TRANSFER_TOKENS ; CONS } }
                                                 { DUP ;
                                                   CAR ;
                                                   CONTRACT %transfer
                                                     (list (pair (address %from_)
                                                                 (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                                                   IF_NONE
                                                     { DROP 2 ; PUSH nat 121 ; FAILWITH }
                                                     { DIG 2 ; SWAP ; PUSH mutez 0 ; DIG 3 ; CDR ; TRANSFER_TOKENS ; CONS } } } ;
                                        NONE address ;
                                        DIG 2 ;
                                        PAIR ;
                                        PAIR } }
                                  { DIG 2 ;
                                    DIG 4 ;
                                    DIG 5 ;
                                    DROP 3 ;
                                    IF_LEFT
                                      { SET_DELEGATE ; CONS ; NONE address ; DIG 2 ; PAIR ; PAIR }
                                      { SOME ; DIG 2 ; PAIR ; PAIR } } }
                              { DIG 2 ;
                                DIG 5 ;
                                DROP 2 ;
                                DUP 3 ;
                                PUSH string "proposal_receivers" ;
                                PAIR ;
                                DIG 5 ;
                                SWAP ;
                                EXEC ;
                                UNPAIR ;
                                SWAP ;
                                UNPACK (set address) ;
                                IF_NONE { PUSH nat 110 ; PAIR ; FAILWITH } { SWAP ; DROP } ;
                                SWAP ;
                                IF_LEFT
                                  { LAMBDA
                                      (pair (set address) address)
                                      (set address)
                                      { UNPAIR ; SWAP ; PUSH bool True ; SWAP ; UPDATE } ;
                                    SWAP ;
                                    DIG 2 ;
                                    PAIR ;
                                    PAIR ;
                                    DIG 3 ;
                                    SWAP ;
                                    EXEC }
                                  { LAMBDA
                                      (pair (set address) address)
                                      (set address)
                                      { UNPAIR ; SWAP ; PUSH bool False ; SWAP ; UPDATE } ;
                                    SWAP ;
                                    DIG 2 ;
                                    PAIR ;
                                    PAIR ;
                                    DIG 3 ;
                                    SWAP ;
                                    EXEC } ;
                                SWAP ;
                                NONE address ;
                                DIG 3 ;
                                DIG 3 ;
                                PACK ;
                                SOME ;
                                PUSH string "proposal_receivers" ;
                                UPDATE ;
                                PAIR ;
                                PAIR } } })
                  0
                  100000)
            (Pair 500 990000)
            990000
            10000)
      (Pair (Pair 30
                  { PUSH (pair (lambda
                                  bytes
                                  (or (or (or (pair (pair (pair (option nat) (option nat)) (option nat) (option nat)) (option nat))
                                              (pair (pair nat (list (pair string (option string))))
                                                    (list (or (pair mutez address) (pair address (list (pair address (list (pair address nat nat)))))))))
                                          (or (option key_hash) address))
                                      (or (list address) (list address))))
                               (lambda (pair string bytes) nat)
                               (lambda (pair string bytes) mutez)
                               (lambda (pair string (big_map string bytes)) (pair string bytes))
                               (lambda string unit))
                         (Pair { UNPACK
                                   (or (or (or (pair %configuration_proposal
                                                  (pair (pair (option %frozen_extra_value nat) (option %frozen_scale_value nat))
                                                        (pair (option %max_proposal_size nat) (option %slash_division_value nat)))
                                                  (option %slash_scale_value nat))
                                               (pair %transfer_proposal
                                                  (pair (nat %agora_post_id) (list %registry_diff (pair string (option string))))
                                                  (list %transfers
                                                     (or (pair %xtz_transfer_type (mutez %amount) (address %recipient))
                                                         (pair %token_transfer_type
                                                            (address %contract_address)
                                                            (list %transfer_list
                                                               (pair (address %from_)
                                                                     (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))))))))
                                           (or (option %update_contract_delegate key_hash) (address %update_guardian)))
                                       (or %update_receivers_proposal
                                          (list %add_receivers address)
                                          (list %remove_receivers address))) ;
                                 IF_NONE { PUSH nat 111 ; FAILWITH } {} }
                               { UNPAIR ;
                                 SWAP ;
                                 UNPACK nat ;
                                 IF_NONE { PUSH nat 110 ; PAIR ; FAILWITH } { SWAP ; DROP } }
                               { UNPAIR ;
                                 SWAP ;
                                 UNPACK mutez ;
                                 IF_NONE { PUSH nat 110 ; PAIR ; FAILWITH } { SWAP ; DROP } }
                               { UNPAIR ;
                                 DUP ;
                                 DUG 2 ;
                                 GET ;
                                 IF_NONE { PUSH nat 112 ; PAIR ; FAILWITH } { SWAP ; PAIR } }
                               { PUSH nat 102 ; PAIR ; FAILWITH }) ;
                    PAIR ;
                    { UNPAIR ;
                      UNPAIR 5 ;
                      DIG 5 ;
                      UNPAIR ;
                      DUP ;
                      GET 4 ;
                      SIZE ;
                      DUP 3 ;
                      PUSH string "frozen_scale_value" ;
                      PAIR ;
                      DUP 8 ;
                      SWAP ;
                      EXEC ;
                      DUP 6 ;
                      SWAP ;
                      EXEC ;
                      DUP 4 ;
                      PUSH string "frozen_extra_value" ;
                      PAIR ;
                      DUP 9 ;
                      SWAP ;
                      EXEC ;
                      DUP 7 ;
                      SWAP ;
                      EXEC ;
                      DUP 5 ;
                      PUSH string "max_proposal_size" ;
                      PAIR ;
                      DUP 10 ;
                      SWAP ;
                      EXEC ;
                      DIG 7 ;
                      SWAP ;
                      EXEC ;
                      SWAP ;
                      DUP 4 ;
                      DIG 3 ;
                      MUL ;
                      ADD ;
                      SWAP ;
                      DIG 2 ;
                      PAIR ;
                      SWAP ;
                      DUP 3 ;
                      GET 3 ;
                      DIG 2 ;
                      UNPAIR ;
                      DIG 3 ;
                      DIG 3 ;
                      COMPARE ;
                      NEQ ;
                      IF { DROP 2 ; PUSH string "WRONG_TOKEN_AMOUNT" ; SOME }
                         { COMPARE ;
                           GE ;
                           IF { PUSH string "LARGE_PROPOSAL" ; SOME } { NONE string } } ;
                      IF_NONE { UNIT } { DUP 7 ; SWAP ; EXEC } ;
                      DROP ;
                      GET 4 ;
                      DIG 2 ;
                      SWAP ;
                      EXEC ;
                      IF_LEFT
                        { IF_LEFT
                            { IF_LEFT
                                { DROP 5 ; UNIT }
                                { SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  PUSH string "min_xtz_amount" ;
                                  PAIR ;
                                  DUP 5 ;
                                  SWAP ;
                                  EXEC ;
                                  DUP 4 ;
                                  SWAP ;
                                  EXEC ;
                                  DIG 2 ;
                                  PUSH string "max_xtz_amount" ;
                                  PAIR ;
                                  DIG 4 ;
                                  SWAP ;
                                  EXEC ;
                                  DIG 3 ;
                                  SWAP ;
                                  EXEC ;
                                  DIG 2 ;
                                  CDR ;
                                  ITER { IF_LEFT
                                           { SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             DUP 4 ;
                                             DIG 2 ;
                                             PUSH mutez 0 ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CAR ;
                                             COMPARE ;
                                             EQ ;
                                             IF { DROP 3 ; PUSH string "ZERO_MUTEZ" ; SOME }
                                                { DUP ;
                                                  DUG 2 ;
                                                  CAR ;
                                                  COMPARE ;
                                                  LT ;
                                                  IF { DROP 2 ; PUSH string "LOW_XTZ" ; SOME }
                                                     { CAR ;
                                                       COMPARE ;
                                                       GT ;
                                                       IF { PUSH string "HIGH_XTZ" ; SOME } { NONE string } } } ;
                                             IF_NONE { UNIT } { DUP 4 ; SWAP ; EXEC } }
                                           { DROP ; UNIT } ;
                                         DROP } ;
                                  DROP 3 ;
                                  UNIT } }
                            { SWAP ;
                              DIG 2 ;
                              DIG 3 ;
                              DIG 4 ;
                              DROP 4 ;
                              IF_LEFT { DROP ; UNIT } { DROP ; UNIT } } }
                        { DROP 5 ; UNIT } } })
            250
            61)
      50000
      { PUSH (pair (lambda (pair string bytes) nat)
                   (lambda (pair string (big_map string bytes)) (pair string bytes)))
             (Pair { UNPAIR ;
                     SWAP ;
                     UNPACK nat ;
                     IF_NONE { PUSH nat 110 ; PAIR ; FAILWITH } { SWAP ; DROP } }
                   { UNPAIR ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH nat 112 ; PAIR ; FAILWITH } { SWAP ; PAIR } }) ;
        PAIR ;
        { UNPAIR ;
          UNPAIR ;
          DIG 2 ;
          UNPAIR ;
          SWAP ;
          DUP ;
          DUG 2 ;
          PUSH string "slash_scale_value" ;
          PAIR ;
          DUP 5 ;
          SWAP ;
          EXEC ;
          DUP 4 ;
          SWAP ;
          EXEC ;
          DIG 2 ;
          PUSH string "slash_division_value" ;
          PAIR ;
          DIG 4 ;
          SWAP ;
          EXEC ;
          DIG 3 ;
          SWAP ;
          EXEC ;
          DIG 2 ;
          CAR ;
          CDR ;
          CDR ;
          DIG 2 ;
          MUL ;
          EDIV ;
          IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
          CAR } })

