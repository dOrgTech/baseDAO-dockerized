parameter
  (or (or (or (pair %callCustom string bytes)
              (pair %propose (nat %frozen_token) (map %proposal_metadata string bytes)))
          (or (or (or (or (or (unit %accept_ownership)
                              (pair %burn (address %from_) (pair (nat %token_id) (nat %amount))))
                          (or (or %call_FA2
                                 (or (pair %balance_of
                                        (list %requests (pair (address %owner) (nat %token_id)))
                                        (contract %callback
                                           (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                                     (list %transfer
                                        (pair (address %from_)
                                              (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))))
                                 (list %update_operators
                                    (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                                        (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))))))
                              (unit %confirm_migration)))
                      (or (or (bytes %drop_proposal) (nat %flush))
                          (or (nat %freeze)
                              (pair %get_total_supply (nat %token_id) (lambda %postprocess nat nat)))))
                  (or (or (or (pair %get_vote_permit_counter (unit %param) (lambda %postprocess nat nat))
                              (address %migrate))
                          (or (pair %mint (address %to_) (pair (nat %token_id) (nat %amount)))
                              (nat %set_fixed_fee_in_token)))
                      (or (or (nat %set_quorum_threshold) (nat %set_voting_period))
                          (or (address %transfer_ownership) (nat %unfreeze)))))
              (list %vote
                 (pair (pair %argument (bytes %proposal_key) (pair (bool %vote_type) (nat %vote_amount)))
                       (option %permit (pair (key %key) (signature %signature)))))))
      (pair %transfer_contract_tokens
         (address %contract_address)
         (list %params
            (pair (address %from_)
                  (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))))) ;
storage
  (pair (pair (pair (pair (pair (pair (address %admin) (map %extra string bytes))
                                (pair (nat %fixed_proposal_fee_in_token)
                                      (big_map %freeze_history
                                         address
                                         (pair (pair (nat %current_period_num) (nat %current_unstaked))
                                               (pair (nat %past_unstaked) (nat %staked))))))
                          (pair (pair (nat %frozen_token_id)
                                      (pair %last_period_change (timestamp %changed_on) (nat %period_num)))
                                (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes))))
                    (pair (pair (pair (or %migration_status
                                         (unit %not_in_migration)
                                         (or (address %migratingTo) (address %migratedTo)))
                                      (big_map %operators (pair (address %owner) (address %operator)) unit))
                                (pair (address %pending_owner) (nat %permits_counter)))
                          (pair (pair (set %proposal_key_list_sort_by_date (pair timestamp bytes))
                                      (big_map %proposals
                                         bytes
                                         (pair (pair (pair (pair (nat %downvotes) (map %metadata string bytes))
                                                           (pair (nat %period_num) (address %proposer)))
                                                     (pair (pair (nat %proposer_fixed_fee_in_token) (nat %proposer_frozen_token))
                                                           (pair (timestamp %start_date) (nat %upvotes))))
                                               (list %voters
                                                  (pair (pair (nat %vote_amount) (bool %vote_type)) (address %voter_address))))))
                                (pair (nat %quorum_threshold) (address %token_address)))))
              (pair (pair (map %total_supply nat nat) (nat %unfrozen_token_id))
                    (nat %voting_period)))
        (pair (pair (pair (pair (map %custom_entrypoints string bytes)
                                (lambda %decision_lambda
                                   (pair (pair (pair (pair (pair (nat %downvotes) (map %metadata string bytes))
                                                           (pair (nat %period_num) (address %proposer)))
                                                     (pair (pair (nat %proposer_fixed_fee_in_token) (nat %proposer_frozen_token))
                                                           (pair (timestamp %start_date) (nat %upvotes))))
                                               (list %voters
                                                  (pair (pair (nat %vote_amount) (bool %vote_type)) (address %voter_address))))
                                         (map string bytes))
                                   (pair (list operation) (map string bytes))))
                          (pair (nat %max_proposals) (nat %max_quorum_threshold)))
                    (pair (pair (nat %max_votes) (nat %max_voting_period))
                          (pair (nat %min_quorum_threshold) (nat %min_voting_period))))
              (pair (lambda %proposal_check
                       (pair (pair (nat %frozen_token) (map %proposal_metadata string bytes))
                             (map string bytes))
                       bool)
                    (lambda %rejected_proposal_return_value
                       (pair (pair (pair (pair (pair (nat %downvotes) (map %metadata string bytes))
                                               (pair (nat %period_num) (address %proposer)))
                                         (pair (pair (nat %proposer_fixed_fee_in_token) (nat %proposer_frozen_token))
                                               (pair (timestamp %start_date) (nat %upvotes))))
                                   (list %voters
                                      (pair (pair (nat %vote_amount) (bool %vote_type)) (address %voter_address))))
                             (map string bytes))
                       nat)))) ;
code { LAMBDA
         (pair (pair timestamp nat) nat)
         nat
         { UNPAIR ;
           DUP ;
           CAR ;
           NOW ;
           SUB ;
           ISNAT ;
           IF_NONE
             { DROP 2 ;
               PUSH unit Unit ;
               PUSH string "STARTED_ON_IN_FUTURE" ;
               PAIR ;
               FAILWITH }
             { DIG 2 ;
               SWAP ;
               EDIV ;
               IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
               CAR ;
               SWAP ;
               CDR ;
               ADD } } ;
       LAMBDA
         (pair nat (pair (pair nat nat) (pair nat nat)))
         (pair (pair nat nat) (pair nat nat))
         { UNPAIR ;
           SWAP ;
           DUP ;
           DUG 2 ;
           CDR ;
           CAR ;
           SUB ;
           ISNAT ;
           IF_NONE
             { DROP ;
               PUSH unit Unit ;
               PUSH string "NOT_ENOUGH_FROZEN_TOKENS" ;
               PAIR ;
               FAILWITH }
             { SWAP ; DUP ; DUG 2 ; CDR ; CDR ; SWAP ; PAIR ; SWAP ; CAR ; PAIR } } ;
       LAMBDA
         (pair nat (pair (pair nat nat) (pair nat nat)))
         (pair (pair nat nat) (pair nat nat))
         { UNPAIR ;
           DUP ;
           DUP 3 ;
           CAR ;
           CAR ;
           COMPARE ;
           LT ;
           IF { SWAP ;
                DUP ;
                DUG 2 ;
                CDR ;
                CDR ;
                DUP 3 ;
                CDR ;
                CAR ;
                DIG 3 ;
                CAR ;
                CDR ;
                ADD ;
                PAIR ;
                PUSH nat 0 ;
                DIG 2 ;
                PAIR ;
                PAIR }
              { DROP } } ;
       DUP 3 ;
       DUP 3 ;
       DUP 3 ;
       PAIR 3 ;
       LAMBDA
         (pair (pair (lambda (pair nat (pair (pair nat nat) (pair nat nat))) (pair (pair nat nat) (pair nat nat)))
                     (pair (lambda (pair nat (pair (pair nat nat) (pair nat nat))) (pair (pair nat nat) (pair nat nat)))
                           (lambda (pair (pair timestamp nat) nat) nat)))
               (pair (pair nat address)
                     (pair (pair (pair (pair (pair address (map string bytes))
                                             (pair nat (big_map address (pair (pair nat nat) (pair nat nat)))))
                                       (pair (pair nat (pair timestamp nat))
                                             (pair (big_map (pair address nat) nat) (big_map string bytes))))
                                 (pair (pair (pair (or unit (or address address)) (big_map (pair address address) unit))
                                             (pair address nat))
                                       (pair (pair (set (pair timestamp bytes))
                                                   (big_map
                                                      bytes
                                                      (pair (pair (pair (pair nat (map string bytes)) (pair nat address))
                                                                  (pair (pair nat nat) (pair timestamp nat)))
                                                            (list (pair (pair nat bool) address)))))
                                             (pair nat address))))
                           (pair (pair (map nat nat) nat) nat))))
         (pair (pair (pair (pair (pair address (map string bytes))
                                 (pair nat (big_map address (pair (pair nat nat) (pair nat nat)))))
                           (pair (pair nat (pair timestamp nat))
                                 (pair (big_map (pair address nat) nat) (big_map string bytes))))
                     (pair (pair (pair (or unit (or address address)) (big_map (pair address address) unit))
                                 (pair address nat))
                           (pair (pair (set (pair timestamp bytes))
                                       (big_map
                                          bytes
                                          (pair (pair (pair (pair nat (map string bytes)) (pair nat address))
                                                      (pair (pair nat nat) (pair timestamp nat)))
                                                (list (pair (pair nat bool) address)))))
                                 (pair nat address))))
               (pair (pair (map nat nat) nat) nat))
         { UNPAIR ;
           UNPAIR 3 ;
           DIG 3 ;
           UNPAIR ;
           UNPAIR ;
           DUP 3 ;
           CDR ;
           CDR ;
           DUP 4 ;
           CAR ;
           CAR ;
           CDR ;
           CAR ;
           CDR ;
           PAIR ;
           DIG 6 ;
           SWAP ;
           EXEC ;
           DUP 4 ;
           CAR ;
           CAR ;
           CAR ;
           CDR ;
           CDR ;
           DUP 4 ;
           GET ;
           IF_NONE
             { DROP ;
               SWAP ;
               DROP ;
               DIG 2 ;
               DROP ;
               DIG 2 ;
               DROP ;
               PUSH nat 0 ;
               SWAP ;
               COMPARE ;
               EQ ;
               IF { DUP ; CAR ; CAR ; CAR ; CDR ; CDR }
                  { PUSH unit Unit ; PUSH string "NOT_ENOUGH_FROZEN_TOKENS" ; PAIR ; FAILWITH } }
             { SWAP ;
               PAIR ;
               DIG 4 ;
               SWAP ;
               EXEC ;
               SWAP ;
               DUP ;
               DUG 2 ;
               PAIR ;
               DIG 4 ;
               SWAP ;
               EXEC ;
               DUP ;
               DUG 2 ;
               CDR ;
               CDR ;
               ADD ;
               SWAP ;
               DUP ;
               DUG 2 ;
               CDR ;
               CAR ;
               PAIR ;
               SWAP ;
               CAR ;
               PAIR ;
               DUP 3 ;
               CAR ;
               CAR ;
               CAR ;
               CDR ;
               CDR ;
               SWAP ;
               SOME ;
               DIG 2 ;
               UPDATE } ;
           SWAP ;
           DUP ;
           DUG 2 ;
           CDR ;
           DUP 3 ;
           CAR ;
           CDR ;
           DUP 4 ;
           CAR ;
           CAR ;
           CDR ;
           DIG 3 ;
           DUP 5 ;
           CAR ;
           CAR ;
           CAR ;
           CDR ;
           CAR ;
           PAIR ;
           DIG 4 ;
           CAR ;
           CAR ;
           CAR ;
           CAR ;
           PAIR ;
           PAIR ;
           PAIR ;
           PAIR } ;
       SWAP ;
       APPLY ;
       DUP 4 ;
       DUP 3 ;
       PAIR ;
       LAMBDA
         (pair (pair (lambda (pair nat (pair (pair nat nat) (pair nat nat))) (pair (pair nat nat) (pair nat nat)))
                     (lambda (pair (pair timestamp nat) nat) nat))
               (pair (pair nat address)
                     (pair (pair (pair (pair (pair address (map string bytes))
                                             (pair nat (big_map address (pair (pair nat nat) (pair nat nat)))))
                                       (pair (pair nat (pair timestamp nat))
                                             (pair (big_map (pair address nat) nat) (big_map string bytes))))
                                 (pair (pair (pair (or unit (or address address)) (big_map (pair address address) unit))
                                             (pair address nat))
                                       (pair (pair (set (pair timestamp bytes))
                                                   (big_map
                                                      bytes
                                                      (pair (pair (pair (pair nat (map string bytes)) (pair nat address))
                                                                  (pair (pair nat nat) (pair timestamp nat)))
                                                            (list (pair (pair nat bool) address)))))
                                             (pair nat address))))
                           (pair (pair (map nat nat) nat) nat))))
         (pair (pair (pair (pair (pair address (map string bytes))
                                 (pair nat (big_map address (pair (pair nat nat) (pair nat nat)))))
                           (pair (pair nat (pair timestamp nat))
                                 (pair (big_map (pair address nat) nat) (big_map string bytes))))
                     (pair (pair (pair (or unit (or address address)) (big_map (pair address address) unit))
                                 (pair address nat))
                           (pair (pair (set (pair timestamp bytes))
                                       (big_map
                                          bytes
                                          (pair (pair (pair (pair nat (map string bytes)) (pair nat address))
                                                      (pair (pair nat nat) (pair timestamp nat)))
                                                (list (pair (pair nat bool) address)))))
                                 (pair nat address))))
               (pair (pair (map nat nat) nat) nat))
         { UNPAIR ;
           UNPAIR ;
           DIG 2 ;
           UNPAIR ;
           UNPAIR ;
           DUP 3 ;
           CDR ;
           CDR ;
           DUP 4 ;
           CAR ;
           CAR ;
           CDR ;
           CAR ;
           CDR ;
           PAIR ;
           DIG 5 ;
           SWAP ;
           EXEC ;
           DUP 4 ;
           CAR ;
           CAR ;
           CAR ;
           CDR ;
           CDR ;
           DUP 4 ;
           GET ;
           IF_NONE
             { DROP 5 ;
               PUSH unit Unit ;
               PUSH string "NOT_ENOUGH_STAKED_TOKENS" ;
               PAIR ;
               FAILWITH }
             { SWAP ;
               PAIR ;
               DIG 4 ;
               SWAP ;
               EXEC ;
               SWAP ;
               DUP ;
               DUP 3 ;
               CDR ;
               CDR ;
               SUB ;
               ISNAT ;
               IF_NONE
                 { DROP 2 ;
                   PUSH unit Unit ;
                   PUSH string "NOT_ENOUGH_STAKED_TOKENS" ;
                   PAIR ;
                   FAILWITH }
                 { DUP 3 ;
                   CDR ;
                   CAR ;
                   PAIR ;
                   DUP 3 ;
                   CAR ;
                   PAIR ;
                   DUP ;
                   CDR ;
                   CDR ;
                   DIG 2 ;
                   DIG 3 ;
                   CDR ;
                   CAR ;
                   ADD ;
                   PAIR ;
                   SWAP ;
                   CAR ;
                   PAIR } ;
               DUP 3 ;
               CDR ;
               DUP 4 ;
               CAR ;
               CDR ;
               DUP 5 ;
               CAR ;
               CAR ;
               CDR ;
               DUP 6 ;
               CAR ;
               CAR ;
               CAR ;
               CDR ;
               CDR ;
               DIG 4 ;
               SOME ;
               DIG 5 ;
               UPDATE ;
               DUP 5 ;
               CAR ;
               CAR ;
               CAR ;
               CDR ;
               CAR ;
               PAIR ;
               DIG 4 ;
               CAR ;
               CAR ;
               CAR ;
               CAR ;
               PAIR ;
               PAIR ;
               PAIR ;
               PAIR } } ;
       SWAP ;
       APPLY ;
       LAMBDA
         (pair (lambda
                  (pair (pair nat address)
                        (pair (pair (pair (pair (pair address (map string bytes))
                                                (pair nat (big_map address (pair (pair nat nat) (pair nat nat)))))
                                          (pair (pair nat (pair timestamp nat))
                                                (pair (big_map (pair address nat) nat) (big_map string bytes))))
                                    (pair (pair (pair (or unit (or address address)) (big_map (pair address address) unit))
                                                (pair address nat))
                                          (pair (pair (set (pair timestamp bytes))
                                                      (big_map
                                                         bytes
                                                         (pair (pair (pair (pair nat (map string bytes)) (pair nat address))
                                                                     (pair (pair nat nat) (pair timestamp nat)))
                                                               (list (pair (pair nat bool) address)))))
                                                (pair nat address))))
                              (pair (pair (map nat nat) nat) nat)))
                  (pair (pair (pair (pair (pair address (map string bytes))
                                          (pair nat (big_map address (pair (pair nat nat) (pair nat nat)))))
                                    (pair (pair nat (pair timestamp nat))
                                          (pair (big_map (pair address nat) nat) (big_map string bytes))))
                              (pair (pair (pair (or unit (or address address)) (big_map (pair address address) unit))
                                          (pair address nat))
                                    (pair (pair (set (pair timestamp bytes))
                                                (big_map
                                                   bytes
                                                   (pair (pair (pair (pair nat (map string bytes)) (pair nat address))
                                                               (pair (pair nat nat) (pair timestamp nat)))
                                                         (list (pair (pair nat bool) address)))))
                                          (pair nat address))))
                        (pair (pair (map nat nat) nat) nat)))
               (pair (pair (pair (lambda
                                    (pair (pair (pair (pair (pair nat (map string bytes)) (pair nat address))
                                                      (pair (pair nat nat) (pair timestamp nat)))
                                                (list (pair (pair nat bool) address)))
                                          (map string bytes))
                                    nat)
                                 bool)
                           (pair (pair (pair (pair (pair nat (map string bytes)) (pair nat address))
                                             (pair (pair nat nat) (pair timestamp nat)))
                                       (list (pair (pair nat bool) address)))
                                 bytes))
                     (pair (pair (pair (pair (pair address (map string bytes))
                                             (pair nat (big_map address (pair (pair nat nat) (pair nat nat)))))
                                       (pair (pair nat (pair timestamp nat))
                                             (pair (big_map (pair address nat) nat) (big_map string bytes))))
                                 (pair (pair (pair (or unit (or address address)) (big_map (pair address address) unit))
                                             (pair address nat))
                                       (pair (pair (set (pair timestamp bytes))
                                                   (big_map
                                                      bytes
                                                      (pair (pair (pair (pair nat (map string bytes)) (pair nat address))
                                                                  (pair (pair nat nat) (pair timestamp nat)))
                                                            (list (pair (pair nat bool) address)))))
                                             (pair nat address))))
                           (pair (pair (map nat nat) nat) nat))))
         (pair (pair (pair (pair (pair address (map string bytes))
                                 (pair nat (big_map address (pair (pair nat nat) (pair nat nat)))))
                           (pair (pair nat (pair timestamp nat))
                                 (pair (big_map (pair address nat) nat) (big_map string bytes))))
                     (pair (pair (pair (or unit (or address address)) (big_map (pair address address) unit))
                                 (pair address nat))
                           (pair (pair (set (pair timestamp bytes))
                                       (big_map
                                          bytes
                                          (pair (pair (pair (pair nat (map string bytes)) (pair nat address))
                                                      (pair (pair nat nat) (pair timestamp nat)))
                                                (list (pair (pair nat bool) address)))))
                                 (pair nat address))))
               (pair (pair (map nat nat) nat) nat))
         { UNPAIR ;
           SWAP ;
           UNPAIR ;
           UNPAIR ;
           UNPAIR ;
           DIG 2 ;
           CAR ;
           DIG 2 ;
           IF { SWAP ;
                DROP ;
                DUP ;
                DUG 2 ;
                CAR ;
                CDR ;
                CAR ;
                CAR ;
                DUP 3 ;
                CAR ;
                CDR ;
                CAR ;
                CDR ;
                ADD ;
                PAIR }
              { DUP 3 ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SWAP ;
                DUP ;
                DUG 2 ;
                PAIR ;
                DIG 2 ;
                SWAP ;
                EXEC ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                CDR ;
                CAR ;
                CAR ;
                DUP ;
                DUP 4 ;
                CAR ;
                CDR ;
                CAR ;
                CDR ;
                ADD ;
                SWAP ;
                DIG 2 ;
                ADD ;
                DIG 3 ;
                DUP 4 ;
                CAR ;
                CAR ;
                CDR ;
                CDR ;
                PAIR ;
                DUP 3 ;
                DUP 3 ;
                DIG 2 ;
                UNPAIR ;
                DUP 3 ;
                DUP 5 ;
                SUB ;
                ISNAT ;
                IF_NONE { DIG 2 ; DROP ; DIG 2 } { DROP ; DIG 3 ; DROP ; DIG 2 } ;
                DUP 3 ;
                CDR ;
                CAR ;
                CAR ;
                DUP 4 ;
                CAR ;
                CAR ;
                CDR ;
                CDR ;
                CAR ;
                DUP 5 ;
                CAR ;
                CAR ;
                CDR ;
                CAR ;
                CAR ;
                PAIR ;
                DIG 3 ;
                DIG 3 ;
                DIG 2 ;
                UNPAIR ;
                SWAP ;
                DUP ;
                DUG 2 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                DUP 6 ;
                PAIR ;
                GET ;
                IF_NONE
                  { DROP ;
                    DIG 2 ;
                    DROP ;
                    PUSH nat 0 ;
                    DUP 3 ;
                    COMPARE ;
                    EQ ;
                    IF { SWAP ; DROP ; PAIR }
                       { DROP ;
                         SWAP ;
                         DROP ;
                         PUSH nat 0 ;
                         SWAP ;
                         PAIR ;
                         PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                         PAIR ;
                         FAILWITH } }
                  { DUP 6 ;
                    DUP 3 ;
                    GET ;
                    IF_NONE
                      { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                      { DUP 5 ;
                        SWAP ;
                        SUB ;
                        ISNAT ;
                        IF_NONE { PUSH string "NEGATIVE_TOTAL_SUPPLY" ; FAILWITH } {} } ;
                    DUP 5 ;
                    DUP 3 ;
                    SUB ;
                    ISNAT ;
                    IF_NONE
                      { DROP ;
                        SWAP ;
                        DROP ;
                        SWAP ;
                        DROP ;
                        DIG 2 ;
                        DROP ;
                        DIG 2 ;
                        DROP ;
                        SWAP ;
                        PAIR ;
                        PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                        PAIR ;
                        FAILWITH }
                      { DIG 2 ;
                        DROP ;
                        DIG 4 ;
                        DROP ;
                        DIG 5 ;
                        DIG 2 ;
                        SOME ;
                        DUP 4 ;
                        UPDATE ;
                        DIG 3 ;
                        DIG 2 ;
                        SOME ;
                        DIG 3 ;
                        DIG 4 ;
                        PAIR ;
                        UPDATE ;
                        PAIR } } ;
                UNPAIR ;
                DUP 3 ;
                CDR ;
                DUP 4 ;
                CAR ;
                CDR ;
                DUP 5 ;
                CAR ;
                CAR ;
                CDR ;
                CDR ;
                CDR ;
                DIG 3 ;
                PAIR ;
                DUP 5 ;
                CAR ;
                CAR ;
                CDR ;
                CAR ;
                PAIR ;
                DIG 4 ;
                CAR ;
                CAR ;
                CAR ;
                PAIR ;
                PAIR ;
                PAIR ;
                DUP ;
                CDR ;
                CDR ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CDR ;
                CAR ;
                CDR ;
                DIG 3 ;
                PAIR ;
                PAIR ;
                SWAP ;
                CAR ;
                PAIR ;
                SWAP ;
                DIG 2 ;
                SUB ;
                ISNAT ;
                IF_NONE { PUSH nat 0 } {} ;
                PAIR } ;
           CDR ;
           SWAP ;
           DUP ;
           DUG 2 ;
           CAR ;
           CAR ;
           CDR ;
           CDR ;
           DUP 3 ;
           CAR ;
           CDR ;
           CAR ;
           CDR ;
           PAIR ;
           PAIR ;
           DUP 3 ;
           SWAP ;
           EXEC ;
           SWAP ;
           CDR ;
           ITER { DUP ;
                  DUG 2 ;
                  CDR ;
                  DIG 2 ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  PAIR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  SWAP ;
                  EXEC } ;
           SWAP ;
           DROP } ;
       SWAP ;
       APPLY ;
       DIG 5 ;
       UNPAIR ;
       SWAP ;
       DUP ;
       DUG 2 ;
       CAR ;
       DIG 2 ;
       CDR ;
       DIG 2 ;
       IF_LEFT
         { SWAP ;
           DUP ;
           DUG 2 ;
           DIG 3 ;
           DIG 2 ;
           SWAP ;
           DUP ;
           DUG 2 ;
           CAR ;
           CDR ;
           CAR ;
           CAR ;
           CAR ;
           IF_LEFT
             { DROP ; SWAP }
             { IF_LEFT
                 { DROP ; SWAP }
                 { DIG 2 ; DROP ; PUSH string "MIGRATED" ; PAIR ; FAILWITH } } ;
           SWAP ;
           IF_LEFT
             { DIG 4 ;
               DROP ;
               DIG 5 ;
               DROP ;
               DIG 5 ;
               DROP ;
               IF_LEFT
                 { DIG 4 ;
                   DROP ;
                   DIG 4 ;
                   DROP ;
                   DUP 3 ;
                   CAR ;
                   CAR ;
                   CAR ;
                   CAR ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   GET ;
                   IF_NONE { PUSH string "ENTRYPOINT_NOT_FOUND" ; FAILWITH } {} ;
                   UNPACK
                     (lambda
                        (pair bytes
                              (pair (pair (pair (pair (pair (pair (address %admin) (map %extra string bytes))
                                                            (pair (nat %fixed_proposal_fee_in_token)
                                                                  (big_map %freeze_history
                                                                     address
                                                                     (pair (pair (nat %current_period_num) (nat %current_unstaked))
                                                                           (pair (nat %past_unstaked) (nat %staked))))))
                                                      (pair (pair (nat %frozen_token_id)
                                                                  (pair %last_period_change (timestamp %changed_on) (nat %period_num)))
                                                            (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes))))
                                                (pair (pair (pair (or %migration_status
                                                                     (unit %not_in_migration)
                                                                     (or (address %migratingTo) (address %migratedTo)))
                                                                  (big_map %operators (pair (address %owner) (address %operator)) unit))
                                                            (pair (address %pending_owner) (nat %permits_counter)))
                                                      (pair (pair (set %proposal_key_list_sort_by_date (pair timestamp bytes))
                                                                  (big_map %proposals
                                                                     bytes
                                                                     (pair (pair (pair (pair (nat %downvotes) (map %metadata string bytes))
                                                                                       (pair (nat %period_num) (address %proposer)))
                                                                                 (pair (pair (nat %proposer_fixed_fee_in_token) (nat %proposer_frozen_token))
                                                                                       (pair (timestamp %start_date) (nat %upvotes))))
                                                                           (list %voters
                                                                              (pair (pair (nat %vote_amount) (bool %vote_type)) (address %voter_address))))))
                                                            (pair (nat %quorum_threshold) (address %token_address)))))
                                          (pair (pair (map %total_supply nat nat) (nat %unfrozen_token_id))
                                                (nat %voting_period)))
                                    (pair (pair (pair (pair (map %custom_entrypoints string bytes)
                                                            (lambda %decision_lambda
                                                               (pair (pair (pair (pair (pair (nat %downvotes) (map %metadata string bytes))
                                                                                       (pair (nat %period_num) (address %proposer)))
                                                                                 (pair (pair (nat %proposer_fixed_fee_in_token) (nat %proposer_frozen_token))
                                                                                       (pair (timestamp %start_date) (nat %upvotes))))
                                                                           (list %voters
                                                                              (pair (pair (nat %vote_amount) (bool %vote_type)) (address %voter_address))))
                                                                     (map string bytes))
                                                               (pair (list operation) (map string bytes))))
                                                      (pair (nat %max_proposals) (nat %max_quorum_threshold)))
                                                (pair (pair (nat %max_votes) (nat %max_voting_period))
                                                      (pair (nat %min_quorum_threshold) (nat %min_voting_period))))
                                          (pair (lambda %proposal_check
                                                   (pair (pair (nat %frozen_token) (map %proposal_metadata string bytes))
                                                         (map string bytes))
                                                   bool)
                                                (lambda %rejected_proposal_return_value
                                                   (pair (pair (pair (pair (pair (nat %downvotes) (map %metadata string bytes))
                                                                           (pair (nat %period_num) (address %proposer)))
                                                                     (pair (pair (nat %proposer_fixed_fee_in_token) (nat %proposer_frozen_token))
                                                                           (pair (timestamp %start_date) (nat %upvotes))))
                                                               (list %voters
                                                                  (pair (pair (nat %vote_amount) (bool %vote_type)) (address %voter_address))))
                                                         (map string bytes))
                                                   nat)))))
                        (pair (list operation)
                              (pair (pair (pair (pair (pair (address %admin) (map %extra string bytes))
                                                      (pair (nat %fixed_proposal_fee_in_token)
                                                            (big_map %freeze_history
                                                               address
                                                               (pair (pair (nat %current_period_num) (nat %current_unstaked))
                                                                     (pair (nat %past_unstaked) (nat %staked))))))
                                                (pair (pair (nat %frozen_token_id)
                                                            (pair %last_period_change (timestamp %changed_on) (nat %period_num)))
                                                      (pair (big_map %ledger (pair address nat) nat) (big_map %metadata string bytes))))
                                          (pair (pair (pair (or %migration_status
                                                               (unit %not_in_migration)
                                                               (or (address %migratingTo) (address %migratedTo)))
                                                            (big_map %operators (pair (address %owner) (address %operator)) unit))
                                                      (pair (address %pending_owner) (nat %permits_counter)))
                                                (pair (pair (set %proposal_key_list_sort_by_date (pair timestamp bytes))
                                                            (big_map %proposals
                                                               bytes
                                                               (pair (pair (pair (pair (nat %downvotes) (map %metadata string bytes))
                                                                                 (pair (nat %period_num) (address %proposer)))
                                                                           (pair (pair (nat %proposer_fixed_fee_in_token) (nat %proposer_frozen_token))
                                                                                 (pair (timestamp %start_date) (nat %upvotes))))
                                                                     (list %voters
                                                                        (pair (pair (nat %vote_amount) (bool %vote_type)) (address %voter_address))))))
                                                      (pair (nat %quorum_threshold) (address %token_address)))))
                                    (pair (pair (map %total_supply nat nat) (nat %unfrozen_token_id))
                                          (nat %voting_period))))) ;
                   IF_NONE
                     { DROP 3 ; PUSH string "UNPACKING_FAILED" ; FAILWITH }
                     { DIG 3 ; DIG 3 ; PAIR ; DIG 2 ; CDR ; PAIR ; EXEC } }
                 { DUP ;
                   DUG 2 ;
                   DUP 4 ;
                   DUP 3 ;
                   CAR ;
                   CAR ;
                   CAR ;
                   CAR ;
                   CDR ;
                   DIG 2 ;
                   PAIR ;
                   SWAP ;
                   CDR ;
                   CAR ;
                   SWAP ;
                   EXEC ;
                   IF {} { DROP ; PUSH string "FAIL_PROPOSAL_CHECK" ; FAILWITH } ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   DIG 3 ;
                   SWAP ;
                   DROP ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CDR ;
                   CDR ;
                   CAR ;
                   CAR ;
                   SIZE ;
                   SWAP ;
                   CAR ;
                   CAR ;
                   CDR ;
                   CAR ;
                   COMPARE ;
                   LE ;
                   IF { DROP ; PUSH string "MAX_PROPOSALS_REACHED" ; FAILWITH } {} ;
                   DUP ;
                   CAR ;
                   CAR ;
                   CAR ;
                   CDR ;
                   CAR ;
                   DUP 3 ;
                   CAR ;
                   ADD ;
                   SWAP ;
                   SENDER ;
                   DIG 2 ;
                   PAIR ;
                   PAIR ;
                   DIG 3 ;
                   SWAP ;
                   EXEC ;
                   DUP ;
                   DUG 2 ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   SENDER ;
                   SWAP ;
                   PAIR ;
                   PACK ;
                   BLAKE2B ;
                   SWAP ;
                   CAR ;
                   CDR ;
                   CDR ;
                   CAR ;
                   CDR ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   MEM ;
                   IF { DROP ; PUSH string "PROPOSAL_NOT_UNIQUE" ; FAILWITH } {} ;
                   DUP 3 ;
                   CDR ;
                   CDR ;
                   DUP 4 ;
                   CAR ;
                   CAR ;
                   CDR ;
                   CAR ;
                   CDR ;
                   PAIR ;
                   DIG 5 ;
                   SWAP ;
                   EXEC ;
                   DIG 3 ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   PUSH nat 0 ;
                   PUSH nat 2 ;
                   DIG 2 ;
                   EDIV ;
                   IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                   CDR ;
                   COMPARE ;
                   EQ ;
                   IF {} { DROP ; PUSH string "NOT_PROPOSING_PERIOD" ; FAILWITH } ;
                   NOW ;
                   NIL (pair (pair nat bool) address) ;
                   PUSH nat 0 ;
                   DUP 3 ;
                   PAIR ;
                   DUP 7 ;
                   CAR ;
                   DUP 5 ;
                   CAR ;
                   CAR ;
                   CAR ;
                   CDR ;
                   CAR ;
                   PAIR ;
                   PAIR ;
                   SENDER ;
                   DIG 5 ;
                   PAIR ;
                   DIG 6 ;
                   CDR ;
                   PUSH nat 0 ;
                   PAIR ;
                   PAIR ;
                   PAIR ;
                   PAIR ;
                   DUP 3 ;
                   CDR ;
                   DUP 4 ;
                   CAR ;
                   CDR ;
                   CDR ;
                   CDR ;
                   DUP 5 ;
                   CAR ;
                   CDR ;
                   CDR ;
                   CAR ;
                   CDR ;
                   DIG 3 ;
                   DUP 7 ;
                   SWAP ;
                   SOME ;
                   SWAP ;
                   UPDATE ;
                   DUP 5 ;
                   CAR ;
                   CDR ;
                   CDR ;
                   CAR ;
                   CAR ;
                   PAIR ;
                   PAIR ;
                   DUP 4 ;
                   CAR ;
                   CDR ;
                   CAR ;
                   PAIR ;
                   DUP 4 ;
                   CAR ;
                   CAR ;
                   PAIR ;
                   PAIR ;
                   DUP ;
                   CDR ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CDR ;
                   CDR ;
                   CDR ;
                   DUP 3 ;
                   CAR ;
                   CDR ;
                   CDR ;
                   CAR ;
                   CDR ;
                   DIG 5 ;
                   CAR ;
                   CDR ;
                   CDR ;
                   CAR ;
                   CAR ;
                   DIG 6 ;
                   DIG 6 ;
                   PAIR ;
                   PUSH bool True ;
                   SWAP ;
                   UPDATE ;
                   PAIR ;
                   PAIR ;
                   DUP 3 ;
                   CAR ;
                   CDR ;
                   CAR ;
                   PAIR ;
                   DIG 2 ;
                   CAR ;
                   CAR ;
                   PAIR ;
                   PAIR ;
                   NIL operation ;
                   PAIR } }
             { PUSH mutez 0 ;
               AMOUNT ;
               COMPARE ;
               GT ;
               IF { DROP 3 ;
                    SWAP ;
                    DROP ;
                    SWAP ;
                    DROP ;
                    SWAP ;
                    DROP ;
                    SWAP ;
                    DROP ;
                    SWAP ;
                    DROP ;
                    PUSH string "FORBIDDEN_XTZ" ;
                    FAILWITH }
                  { IF_LEFT
                      { DIG 5 ;
                        DROP ;
                        IF_LEFT
                          { DIG 6 ;
                            DROP ;
                            IF_LEFT
                              { DIG 2 ;
                                DROP ;
                                DIG 3 ;
                                DROP ;
                                DIG 3 ;
                                DROP ;
                                DIG 3 ;
                                DROP ;
                                IF_LEFT
                                  { IF_LEFT
                                      { DROP ;
                                        SENDER ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        COMPARE ;
                                        EQ ;
                                        IF { DUP ;
                                             CDR ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CAR ;
                                             CDR ;
                                             DUP 3 ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             DUP 4 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             DIG 4 ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             CDR ;
                                             SENDER ;
                                             PAIR ;
                                             PAIR ;
                                             PAIR ;
                                             PAIR ;
                                             PAIR ;
                                             NIL operation ;
                                             PAIR }
                                           { DROP ; PUSH string "NOT_PENDING_ADMIN" ; FAILWITH } }
                                      { SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        SENDER ;
                                        COMPARE ;
                                        EQ ;
                                        IF { SWAP } { SWAP ; DROP ; PUSH string "NOT_ADMIN" ; FAILWITH } ;
                                        DUP ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        CAR ;
                                        DUP 4 ;
                                        CDR ;
                                        CAR ;
                                        PAIR ;
                                        DUP 4 ;
                                        CAR ;
                                        DIG 4 ;
                                        CDR ;
                                        CDR ;
                                        DIG 2 ;
                                        UNPAIR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        DUP 6 ;
                                        PAIR ;
                                        GET ;
                                        IF_NONE
                                          { DROP ;
                                            DIG 2 ;
                                            DROP ;
                                            PUSH nat 0 ;
                                            DUP 3 ;
                                            COMPARE ;
                                            EQ ;
                                            IF { SWAP ; DROP ; PAIR }
                                               { DROP ;
                                                 SWAP ;
                                                 DROP ;
                                                 PUSH nat 0 ;
                                                 SWAP ;
                                                 PAIR ;
                                                 PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                                                 PAIR ;
                                                 FAILWITH } }
                                          { DUP 6 ;
                                            DUP 3 ;
                                            GET ;
                                            IF_NONE
                                              { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                                              { DUP 5 ;
                                                SWAP ;
                                                SUB ;
                                                ISNAT ;
                                                IF_NONE { PUSH string "NEGATIVE_TOTAL_SUPPLY" ; FAILWITH } {} } ;
                                            DUP 5 ;
                                            DUP 3 ;
                                            SUB ;
                                            ISNAT ;
                                            IF_NONE
                                              { DROP ;
                                                SWAP ;
                                                DROP ;
                                                SWAP ;
                                                DROP ;
                                                DIG 2 ;
                                                DROP ;
                                                DIG 2 ;
                                                DROP ;
                                                SWAP ;
                                                PAIR ;
                                                PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                                                PAIR ;
                                                FAILWITH }
                                              { DIG 2 ;
                                                DROP ;
                                                DIG 4 ;
                                                DROP ;
                                                DIG 5 ;
                                                DIG 2 ;
                                                SOME ;
                                                DUP 4 ;
                                                UPDATE ;
                                                DIG 3 ;
                                                DIG 2 ;
                                                SOME ;
                                                DIG 3 ;
                                                DIG 4 ;
                                                PAIR ;
                                                UPDATE ;
                                                PAIR } } ;
                                        UNPAIR ;
                                        DUP 3 ;
                                        CDR ;
                                        DUP 4 ;
                                        CAR ;
                                        CDR ;
                                        DUP 5 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        DIG 3 ;
                                        PAIR ;
                                        DUP 5 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        PAIR ;
                                        DIG 4 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR ;
                                        DUP ;
                                        CDR ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        DIG 3 ;
                                        PAIR ;
                                        PAIR ;
                                        SWAP ;
                                        CAR ;
                                        PAIR ;
                                        NIL operation ;
                                        PAIR } }
                                  { IF_LEFT
                                      { IF_LEFT
                                          { IF_LEFT
                                              { DUP ;
                                                CAR ;
                                                MAP { DUP 3 ;
                                                      CAR ;
                                                      CAR ;
                                                      CDR ;
                                                      CAR ;
                                                      CAR ;
                                                      DUP 4 ;
                                                      CDR ;
                                                      CAR ;
                                                      CDR ;
                                                      DUP 3 ;
                                                      CDR ;
                                                      DIG 2 ;
                                                      SWAP ;
                                                      DUP ;
                                                      DUG 2 ;
                                                      COMPARE ;
                                                      EQ ;
                                                      DUG 2 ;
                                                      DUP ;
                                                      DUG 3 ;
                                                      COMPARE ;
                                                      EQ ;
                                                      OR ;
                                                      IF {}
                                                         { DROP ;
                                                           PUSH unit Unit ;
                                                           PUSH string "FA2_TOKEN_UNDEFINED" ;
                                                           PAIR ;
                                                           FAILWITH } ;
                                                      DUP 4 ;
                                                      CAR ;
                                                      CAR ;
                                                      CDR ;
                                                      CDR ;
                                                      CAR ;
                                                      SWAP ;
                                                      DUP 3 ;
                                                      CAR ;
                                                      PAIR ;
                                                      GET ;
                                                      IF_NONE { PUSH nat 0 } {} ;
                                                      SWAP ;
                                                      PAIR } ;
                                                SWAP ;
                                                CDR ;
                                                PUSH mutez 0 ;
                                                DIG 2 ;
                                                TRANSFER_TOKENS ;
                                                SWAP ;
                                                NIL operation ;
                                                DIG 2 ;
                                                CONS ;
                                                PAIR }
                                              { ITER { DUP ;
                                                       DUG 2 ;
                                                       CDR ;
                                                       ITER { SWAP ;
                                                              DUP ;
                                                              DUP 4 ;
                                                              CAR ;
                                                              SWAP ;
                                                              DUP ;
                                                              DUG 2 ;
                                                              CAR ;
                                                              CAR ;
                                                              CAR ;
                                                              CAR ;
                                                              CAR ;
                                                              SENDER ;
                                                              COMPARE ;
                                                              EQ ;
                                                              IF { SWAP ; DROP }
                                                                 { DUP ;
                                                                   SENDER ;
                                                                   COMPARE ;
                                                                   EQ ;
                                                                   IF { SWAP ; DROP }
                                                                      { SENDER ;
                                                                        SWAP ;
                                                                        DUP ;
                                                                        DUG 2 ;
                                                                        PAIR ;
                                                                        DIG 2 ;
                                                                        CAR ;
                                                                        CDR ;
                                                                        CAR ;
                                                                        CAR ;
                                                                        CDR ;
                                                                        SWAP ;
                                                                        MEM ;
                                                                        IF {}
                                                                           { DROP ; PUSH unit Unit ; PUSH string "FA2_NOT_OPERATOR" ; PAIR ; FAILWITH } } } ;
                                                              PUSH nat 0 ;
                                                              DUP 4 ;
                                                              CDR ;
                                                              CDR ;
                                                              COMPARE ;
                                                              EQ ;
                                                              IF { DROP ; SWAP ; DROP }
                                                                 { SWAP ;
                                                                   DUP ;
                                                                   DUG 2 ;
                                                                   CDR ;
                                                                   CAR ;
                                                                   CDR ;
                                                                   DUP 4 ;
                                                                   CDR ;
                                                                   CAR ;
                                                                   COMPARE ;
                                                                   EQ ;
                                                                   IF { DUP 3 ; CDR ; CAR }
                                                                      { SWAP ;
                                                                        DUP ;
                                                                        DUG 2 ;
                                                                        CAR ;
                                                                        CAR ;
                                                                        CDR ;
                                                                        CAR ;
                                                                        CAR ;
                                                                        DUP 4 ;
                                                                        CDR ;
                                                                        CAR ;
                                                                        COMPARE ;
                                                                        EQ ;
                                                                        IF { SWAP ;
                                                                             DUP ;
                                                                             DUG 2 ;
                                                                             CAR ;
                                                                             CAR ;
                                                                             CAR ;
                                                                             CAR ;
                                                                             CAR ;
                                                                             SENDER ;
                                                                             COMPARE ;
                                                                             EQ ;
                                                                             IF { DUP 3 ; CDR ; CAR }
                                                                                { PUSH string "FROZEN_TOKEN_NOT_TRANSFERABLE" ; FAILWITH } }
                                                                           { PUSH unit Unit ; PUSH string "FA2_TOKEN_UNDEFINED" ; PAIR ; FAILWITH } } ;
                                                                   DUP 3 ;
                                                                   CDR ;
                                                                   CAR ;
                                                                   CAR ;
                                                                   DUP 4 ;
                                                                   CAR ;
                                                                   CAR ;
                                                                   CDR ;
                                                                   CDR ;
                                                                   CAR ;
                                                                   DUP 3 ;
                                                                   PAIR ;
                                                                   DIG 3 ;
                                                                   DUP 6 ;
                                                                   CDR ;
                                                                   CDR ;
                                                                   DIG 2 ;
                                                                   UNPAIR ;
                                                                   SWAP ;
                                                                   DUP ;
                                                                   DUG 2 ;
                                                                   SWAP ;
                                                                   DUP ;
                                                                   DUG 2 ;
                                                                   DUP 6 ;
                                                                   PAIR ;
                                                                   GET ;
                                                                   IF_NONE
                                                                     { DROP ;
                                                                       DIG 2 ;
                                                                       DROP ;
                                                                       PUSH nat 0 ;
                                                                       DUP 3 ;
                                                                       COMPARE ;
                                                                       EQ ;
                                                                       IF { SWAP ; DROP ; PAIR }
                                                                          { DROP ;
                                                                            SWAP ;
                                                                            DROP ;
                                                                            PUSH nat 0 ;
                                                                            SWAP ;
                                                                            PAIR ;
                                                                            PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                                                                            PAIR ;
                                                                            FAILWITH } }
                                                                     { DUP 6 ;
                                                                       DUP 3 ;
                                                                       GET ;
                                                                       IF_NONE
                                                                         { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                                                                         { DUP 5 ;
                                                                           SWAP ;
                                                                           SUB ;
                                                                           ISNAT ;
                                                                           IF_NONE { PUSH string "NEGATIVE_TOTAL_SUPPLY" ; FAILWITH } {} } ;
                                                                       DUP 5 ;
                                                                       DUP 3 ;
                                                                       SUB ;
                                                                       ISNAT ;
                                                                       IF_NONE
                                                                         { DROP ;
                                                                           SWAP ;
                                                                           DROP ;
                                                                           SWAP ;
                                                                           DROP ;
                                                                           DIG 2 ;
                                                                           DROP ;
                                                                           DIG 2 ;
                                                                           DROP ;
                                                                           SWAP ;
                                                                           PAIR ;
                                                                           PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                                                                           PAIR ;
                                                                           FAILWITH }
                                                                         { DIG 2 ;
                                                                           DROP ;
                                                                           DIG 4 ;
                                                                           DROP ;
                                                                           DIG 5 ;
                                                                           DIG 2 ;
                                                                           SOME ;
                                                                           DUP 4 ;
                                                                           UPDATE ;
                                                                           DIG 3 ;
                                                                           DIG 2 ;
                                                                           SOME ;
                                                                           DIG 3 ;
                                                                           DIG 4 ;
                                                                           PAIR ;
                                                                           UPDATE ;
                                                                           PAIR } } ;
                                                                   UNPAIR ;
                                                                   DIG 2 ;
                                                                   PAIR ;
                                                                   DUP 4 ;
                                                                   CAR ;
                                                                   DIG 4 ;
                                                                   CDR ;
                                                                   CDR ;
                                                                   DIG 2 ;
                                                                   UNPAIR ;
                                                                   DUP 5 ;
                                                                   SWAP ;
                                                                   DUP ;
                                                                   DUG 2 ;
                                                                   GET ;
                                                                   IF_NONE
                                                                     { DROP 5 ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                                                                     { DUP 3 ;
                                                                       DUP 3 ;
                                                                       DUP 7 ;
                                                                       PAIR ;
                                                                       GET ;
                                                                       IF_NONE { DUP 4 } { DUP 5 ; ADD } ;
                                                                       DIG 6 ;
                                                                       DIG 5 ;
                                                                       DIG 3 ;
                                                                       ADD ;
                                                                       SOME ;
                                                                       DUP 4 ;
                                                                       UPDATE ;
                                                                       DIG 3 ;
                                                                       DIG 2 ;
                                                                       SOME ;
                                                                       DIG 3 ;
                                                                       DIG 4 ;
                                                                       PAIR ;
                                                                       UPDATE ;
                                                                       PAIR } ;
                                                                   UNPAIR ;
                                                                   DUP 3 ;
                                                                   CDR ;
                                                                   DUP 4 ;
                                                                   CAR ;
                                                                   CDR ;
                                                                   DUP 5 ;
                                                                   CAR ;
                                                                   CAR ;
                                                                   CDR ;
                                                                   CDR ;
                                                                   CDR ;
                                                                   DIG 3 ;
                                                                   PAIR ;
                                                                   DUP 5 ;
                                                                   CAR ;
                                                                   CAR ;
                                                                   CDR ;
                                                                   CAR ;
                                                                   PAIR ;
                                                                   DIG 4 ;
                                                                   CAR ;
                                                                   CAR ;
                                                                   CAR ;
                                                                   PAIR ;
                                                                   PAIR ;
                                                                   PAIR ;
                                                                   DUP ;
                                                                   CDR ;
                                                                   CDR ;
                                                                   SWAP ;
                                                                   DUP ;
                                                                   DUG 2 ;
                                                                   CDR ;
                                                                   CAR ;
                                                                   CDR ;
                                                                   DIG 3 ;
                                                                   PAIR ;
                                                                   PAIR ;
                                                                   SWAP ;
                                                                   CAR ;
                                                                   PAIR } } ;
                                                       SWAP ;
                                                       DROP } ;
                                                NIL operation ;
                                                PAIR } }
                                          { ITER { IF_LEFT { UNIT ; SOME ; PAIR } { NONE unit ; PAIR } ;
                                                   UNPAIR ;
                                                   DUP 3 ;
                                                   CAR ;
                                                   CAR ;
                                                   CDR ;
                                                   CAR ;
                                                   CAR ;
                                                   DUP 4 ;
                                                   CDR ;
                                                   CAR ;
                                                   CDR ;
                                                   DUP 4 ;
                                                   CDR ;
                                                   CDR ;
                                                   DUP ;
                                                   DUG 2 ;
                                                   COMPARE ;
                                                   EQ ;
                                                   IF { DROP 2 }
                                                      { COMPARE ;
                                                        EQ ;
                                                        IF { PUSH string "OPERATION_PROHIBITED" ; FAILWITH }
                                                           { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } } ;
                                                   SWAP ;
                                                   DUP ;
                                                   DUG 2 ;
                                                   CAR ;
                                                   SENDER ;
                                                   COMPARE ;
                                                   EQ ;
                                                   IF { DUP 3 ;
                                                        CDR ;
                                                        DUP 4 ;
                                                        CAR ;
                                                        CDR ;
                                                        CDR ;
                                                        DUP 5 ;
                                                        CAR ;
                                                        CDR ;
                                                        CAR ;
                                                        CDR ;
                                                        DUP 6 ;
                                                        CAR ;
                                                        CDR ;
                                                        CAR ;
                                                        CAR ;
                                                        CDR ;
                                                        DIG 4 ;
                                                        DUP 6 ;
                                                        CDR ;
                                                        CAR ;
                                                        DIG 6 ;
                                                        CAR ;
                                                        PAIR ;
                                                        UPDATE ;
                                                        DUP 5 ;
                                                        CAR ;
                                                        CDR ;
                                                        CAR ;
                                                        CAR ;
                                                        CAR ;
                                                        PAIR ;
                                                        PAIR ;
                                                        PAIR ;
                                                        DIG 2 ;
                                                        CAR ;
                                                        CAR ;
                                                        PAIR ;
                                                        PAIR }
                                                      { DROP 3 ; PUSH string "NOT_OWNER" ; FAILWITH } } ;
                                            NIL operation ;
                                            PAIR } }
                                      { DROP ;
                                        DUP ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        IF_LEFT
                                          { DROP 2 ; PUSH string "NOT_MIGRATING" ; FAILWITH }
                                          { IF_LEFT
                                              { SENDER ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                COMPARE ;
                                                EQ ;
                                                IF { SWAP ;
                                                     DUP ;
                                                     DUG 2 ;
                                                     CDR ;
                                                     DUP 3 ;
                                                     CAR ;
                                                     CDR ;
                                                     CDR ;
                                                     DUP 4 ;
                                                     CAR ;
                                                     CDR ;
                                                     CAR ;
                                                     CDR ;
                                                     DUP 5 ;
                                                     CAR ;
                                                     CDR ;
                                                     CAR ;
                                                     CAR ;
                                                     CDR ;
                                                     DIG 4 ;
                                                     RIGHT address ;
                                                     RIGHT unit ;
                                                     PAIR ;
                                                     PAIR ;
                                                     PAIR ;
                                                     DIG 2 ;
                                                     CAR ;
                                                     CAR ;
                                                     PAIR ;
                                                     PAIR ;
                                                     NIL operation ;
                                                     PAIR }
                                                   { DROP 2 ; PUSH string "NOT_MIGRATION_TARGET" ; FAILWITH } }
                                              { SWAP ; DROP ; PUSH string "MIGRATED" ; PAIR ; FAILWITH } } } } }
                              { IF_LEFT
                                  { DIG 5 ;
                                    DROP ;
                                    IF_LEFT
                                      { SWAP ;
                                        DUG 2 ;
                                        DUP 3 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        SENDER ;
                                        COMPARE ;
                                        EQ ;
                                        IF { DIG 2 } { DIG 2 ; DROP ; PUSH string "NOT_ADMIN" ; FAILWITH } ;
                                        DUP ;
                                        DUP 3 ;
                                        SWAP ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        SWAP ;
                                        GET ;
                                        IF_NONE { PUSH string "PROPOSAL_NOT_EXIST" ; FAILWITH } {} ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        CDR ;
                                        DIG 2 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        PAIR ;
                                        DIG 8 ;
                                        SWAP ;
                                        EXEC ;
                                        PUSH nat 1 ;
                                        DIG 2 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        ADD ;
                                        SWAP ;
                                        COMPARE ;
                                        GT ;
                                        IF { DUP ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             CAR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             COMPARE ;
                                             GT ;
                                             DUP 3 ;
                                             DUP 3 ;
                                             DUP ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             CAR ;
                                             SWAP ;
                                             CAR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             ADD ;
                                             SWAP ;
                                             CAR ;
                                             CDR ;
                                             CDR ;
                                             CDR ;
                                             CAR ;
                                             COMPARE ;
                                             LE ;
                                             AND ;
                                             IF { SWAP ;
                                                  DUP 3 ;
                                                  DUP 3 ;
                                                  PAIR ;
                                                  PUSH bool True ;
                                                  DIG 5 ;
                                                  CDR ;
                                                  CDR ;
                                                  PAIR ;
                                                  PAIR ;
                                                  PAIR ;
                                                  DIG 4 ;
                                                  SWAP ;
                                                  EXEC ;
                                                  DUG 2 ;
                                                  CAR ;
                                                  CDR ;
                                                  CDR ;
                                                  CAR ;
                                                  DUP 3 ;
                                                  CDR ;
                                                  DUP 4 ;
                                                  CAR ;
                                                  CDR ;
                                                  CDR ;
                                                  CDR ;
                                                  DUP 5 ;
                                                  CAR ;
                                                  CDR ;
                                                  CDR ;
                                                  CAR ;
                                                  CDR ;
                                                  DUP 6 ;
                                                  CAR ;
                                                  CDR ;
                                                  CDR ;
                                                  CAR ;
                                                  CAR ;
                                                  DIG 5 ;
                                                  DIG 5 ;
                                                  PAIR ;
                                                  PUSH bool False ;
                                                  SWAP ;
                                                  UPDATE ;
                                                  PAIR ;
                                                  PAIR ;
                                                  DUP 3 ;
                                                  CAR ;
                                                  CDR ;
                                                  CAR ;
                                                  PAIR ;
                                                  DIG 2 ;
                                                  CAR ;
                                                  CAR ;
                                                  PAIR ;
                                                  PAIR ;
                                                  NIL operation ;
                                                  PAIR }
                                                { DROP 4 ;
                                                  SWAP ;
                                                  DROP ;
                                                  PUSH string "FAIL_DROP_PROPOSAL_NOT_ACCEPTED" ;
                                                  FAILWITH } }
                                           { DROP 4 ;
                                             SWAP ;
                                             DROP ;
                                             PUSH string "FAIL_DROP_PROPOSAL_NOT_OVER" ;
                                             FAILWITH } }
                                      { SWAP ;
                                        DUG 2 ;
                                        PUSH nat 0 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        COMPARE ;
                                        EQ ;
                                        IF { DIG 2 ; DROP ; PUSH string "BAD_ENTRYPOINT_PARAMETER" ; FAILWITH }
                                           { DIG 2 } ;
                                        SWAP ;
                                        PUSH nat 0 ;
                                        PAIR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        NIL operation ;
                                        PAIR ;
                                        PAIR ;
                                        SWAP ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        ITER { SWAP ;
                                               UNPAIR ;
                                               UNPAIR ;
                                               DIG 3 ;
                                               UNPAIR ;
                                               DIG 4 ;
                                               DIG 3 ;
                                               PAIR ;
                                               DIG 3 ;
                                               DIG 3 ;
                                               PAIR ;
                                               DIG 2 ;
                                               DUP 4 ;
                                               DIG 2 ;
                                               UNPAIR ;
                                               DIG 4 ;
                                               UNPAIR ;
                                               DUP 4 ;
                                               DUP 4 ;
                                               SWAP ;
                                               CAR ;
                                               CDR ;
                                               CDR ;
                                               CAR ;
                                               CDR ;
                                               SWAP ;
                                               GET ;
                                               IF_NONE { PUSH string "PROPOSAL_NOT_EXIST" ; FAILWITH } {} ;
                                               DUP 3 ;
                                               CDR ;
                                               DUP 4 ;
                                               CAR ;
                                               COMPARE ;
                                               LT ;
                                               DUP 6 ;
                                               DUP 3 ;
                                               SWAP ;
                                               DUP ;
                                               DUG 2 ;
                                               CDR ;
                                               CDR ;
                                               DIG 2 ;
                                               CAR ;
                                               CAR ;
                                               CDR ;
                                               CAR ;
                                               CDR ;
                                               PAIR ;
                                               DUP 14 ;
                                               SWAP ;
                                               EXEC ;
                                               PUSH nat 1 ;
                                               DIG 2 ;
                                               CAR ;
                                               CAR ;
                                               CDR ;
                                               CAR ;
                                               ADD ;
                                               SWAP ;
                                               COMPARE ;
                                               GT ;
                                               AND ;
                                               IF { DUP 3 ;
                                                    CDR ;
                                                    PUSH nat 1 ;
                                                    DIG 4 ;
                                                    CAR ;
                                                    ADD ;
                                                    PAIR ;
                                                    SWAP ;
                                                    DUP ;
                                                    DUG 2 ;
                                                    CAR ;
                                                    CAR ;
                                                    CAR ;
                                                    CAR ;
                                                    DUP 3 ;
                                                    CAR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    COMPARE ;
                                                    GT ;
                                                    DUP 6 ;
                                                    DUP 4 ;
                                                    DUP ;
                                                    CAR ;
                                                    CAR ;
                                                    CAR ;
                                                    CAR ;
                                                    SWAP ;
                                                    CAR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    ADD ;
                                                    SWAP ;
                                                    CAR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    CAR ;
                                                    COMPARE ;
                                                    LE ;
                                                    AND ;
                                                    DIG 5 ;
                                                    DUP 6 ;
                                                    DUP 5 ;
                                                    PAIR ;
                                                    DUP 3 ;
                                                    DUP 9 ;
                                                    CDR ;
                                                    CDR ;
                                                    PAIR ;
                                                    PAIR ;
                                                    PAIR ;
                                                    DUP 11 ;
                                                    SWAP ;
                                                    EXEC ;
                                                    SWAP ;
                                                    IF { DUP ;
                                                         CAR ;
                                                         CAR ;
                                                         CAR ;
                                                         CAR ;
                                                         CDR ;
                                                         DIG 3 ;
                                                         PAIR ;
                                                         DIG 5 ;
                                                         CAR ;
                                                         CAR ;
                                                         CAR ;
                                                         CDR ;
                                                         SWAP ;
                                                         EXEC ;
                                                         UNPAIR ;
                                                         DUP 3 ;
                                                         CDR ;
                                                         DUP 4 ;
                                                         CAR ;
                                                         CDR ;
                                                         DUP 5 ;
                                                         CAR ;
                                                         CAR ;
                                                         CDR ;
                                                         DUP 6 ;
                                                         CAR ;
                                                         CAR ;
                                                         CAR ;
                                                         CDR ;
                                                         DIG 5 ;
                                                         DIG 6 ;
                                                         CAR ;
                                                         CAR ;
                                                         CAR ;
                                                         CAR ;
                                                         CAR ;
                                                         PAIR ;
                                                         PAIR ;
                                                         PAIR ;
                                                         PAIR ;
                                                         PAIR ;
                                                         SWAP ;
                                                         PAIR }
                                                       { DIG 2 ; DROP ; DIG 4 ; DROP ; NIL operation ; PAIR } ;
                                                    UNPAIR ;
                                                    DIG 3 ;
                                                    ITER { CONS } ;
                                                    DUG 2 ;
                                                    DIG 3 ;
                                                    DIG 4 ;
                                                    DUP 3 ;
                                                    CDR ;
                                                    DUP 4 ;
                                                    CAR ;
                                                    CDR ;
                                                    CDR ;
                                                    CDR ;
                                                    DUP 5 ;
                                                    CAR ;
                                                    CDR ;
                                                    CDR ;
                                                    CAR ;
                                                    CDR ;
                                                    DUP 6 ;
                                                    CAR ;
                                                    CDR ;
                                                    CDR ;
                                                    CAR ;
                                                    CAR ;
                                                    DIG 5 ;
                                                    DIG 5 ;
                                                    PAIR ;
                                                    PUSH bool False ;
                                                    SWAP ;
                                                    UPDATE ;
                                                    PAIR ;
                                                    PAIR ;
                                                    DUP 3 ;
                                                    CAR ;
                                                    CDR ;
                                                    CAR ;
                                                    PAIR ;
                                                    DIG 2 ;
                                                    CAR ;
                                                    CAR ;
                                                    PAIR ;
                                                    PAIR ;
                                                    DIG 2 ;
                                                    PAIR ;
                                                    PAIR }
                                                  { DROP ;
                                                    DIG 2 ;
                                                    DROP ;
                                                    DIG 3 ;
                                                    DROP ;
                                                    DIG 3 ;
                                                    DROP ;
                                                    SWAP ;
                                                    DUG 2 ;
                                                    PAIR ;
                                                    PAIR } } ;
                                        SWAP ;
                                        DROP ;
                                        DIG 2 ;
                                        DROP ;
                                        DIG 2 ;
                                        DROP ;
                                        CAR } }
                                  { DIG 4 ;
                                    DROP ;
                                    IF_LEFT
                                      { SWAP ;
                                        DUG 2 ;
                                        SWAP ;
                                        DROP ;
                                        SENDER ;
                                        DUP 3 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        DUP 4 ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        PAIR ;
                                        DUP 4 ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        DUP 5 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        CAR ;
                                        PAIR ;
                                        DUP 3 ;
                                        DUP 5 ;
                                        DIG 2 ;
                                        UNPAIR ;
                                        DIG 4 ;
                                        UNPAIR ;
                                        DIG 3 ;
                                        DIG 3 ;
                                        DIG 2 ;
                                        PAIR ;
                                        DUP 5 ;
                                        DUP 5 ;
                                        DIG 2 ;
                                        UNPAIR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        DUP 6 ;
                                        PAIR ;
                                        GET ;
                                        IF_NONE
                                          { DROP ;
                                            DIG 2 ;
                                            DROP ;
                                            PUSH nat 0 ;
                                            DUP 3 ;
                                            COMPARE ;
                                            EQ ;
                                            IF { SWAP ; DROP ; PAIR }
                                               { DROP ;
                                                 SWAP ;
                                                 DROP ;
                                                 PUSH nat 0 ;
                                                 SWAP ;
                                                 PAIR ;
                                                 PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                                                 PAIR ;
                                                 FAILWITH } }
                                          { DUP 6 ;
                                            DUP 3 ;
                                            GET ;
                                            IF_NONE
                                              { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                                              { DUP 5 ;
                                                SWAP ;
                                                SUB ;
                                                ISNAT ;
                                                IF_NONE { PUSH string "NEGATIVE_TOTAL_SUPPLY" ; FAILWITH } {} } ;
                                            DUP 5 ;
                                            DUP 3 ;
                                            SUB ;
                                            ISNAT ;
                                            IF_NONE
                                              { DROP ;
                                                SWAP ;
                                                DROP ;
                                                SWAP ;
                                                DROP ;
                                                DIG 2 ;
                                                DROP ;
                                                DIG 2 ;
                                                DROP ;
                                                SWAP ;
                                                PAIR ;
                                                PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                                                PAIR ;
                                                FAILWITH }
                                              { DIG 2 ;
                                                DROP ;
                                                DIG 4 ;
                                                DROP ;
                                                DIG 5 ;
                                                DIG 2 ;
                                                SOME ;
                                                DUP 4 ;
                                                UPDATE ;
                                                DIG 3 ;
                                                DIG 2 ;
                                                SOME ;
                                                DIG 3 ;
                                                DIG 4 ;
                                                PAIR ;
                                                UPDATE ;
                                                PAIR } } ;
                                        UNPAIR ;
                                        DIG 2 ;
                                        PAIR ;
                                        DIG 3 ;
                                        DIG 3 ;
                                        DIG 2 ;
                                        UNPAIR ;
                                        DUP 5 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        GET ;
                                        IF_NONE
                                          { DROP 5 ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                                          { DUP 3 ;
                                            DUP 3 ;
                                            DUP 7 ;
                                            PAIR ;
                                            GET ;
                                            IF_NONE { DUP 4 } { DUP 5 ; ADD } ;
                                            DIG 6 ;
                                            DIG 5 ;
                                            DIG 3 ;
                                            ADD ;
                                            SOME ;
                                            DUP 4 ;
                                            UPDATE ;
                                            DIG 3 ;
                                            DIG 2 ;
                                            SOME ;
                                            DIG 3 ;
                                            DIG 4 ;
                                            PAIR ;
                                            UPDATE ;
                                            PAIR } ;
                                        UNPAIR ;
                                        DUP 5 ;
                                        CDR ;
                                        CDR ;
                                        DUP 6 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        PAIR ;
                                        DIG 8 ;
                                        SWAP ;
                                        EXEC ;
                                        DUP 6 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        DUP 5 ;
                                        GET ;
                                        IF_NONE
                                          { DIG 7 ;
                                            DROP ;
                                            PUSH nat 0 ;
                                            PUSH nat 0 ;
                                            PAIR ;
                                            DIG 5 ;
                                            DIG 2 ;
                                            PAIR ;
                                            PAIR }
                                          { SWAP ;
                                            PAIR ;
                                            DIG 7 ;
                                            SWAP ;
                                            EXEC ;
                                            DIG 4 ;
                                            SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            CDR ;
                                            SWAP ;
                                            DUP 3 ;
                                            CAR ;
                                            CDR ;
                                            ADD ;
                                            DIG 2 ;
                                            CAR ;
                                            CAR ;
                                            PAIR ;
                                            PAIR } ;
                                        DUP 5 ;
                                        CDR ;
                                        DUP 6 ;
                                        CAR ;
                                        CDR ;
                                        DUP 7 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        DIG 4 ;
                                        PAIR ;
                                        DUP 7 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        PAIR ;
                                        DUP 7 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR ;
                                        DUP ;
                                        CDR ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        DIG 4 ;
                                        PAIR ;
                                        PAIR ;
                                        SWAP ;
                                        CAR ;
                                        PAIR ;
                                        DUP ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CDR ;
                                        DUP 3 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        DIG 6 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        DIG 5 ;
                                        SOME ;
                                        DIG 6 ;
                                        UPDATE ;
                                        DUP 5 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        PAIR ;
                                        DIG 4 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR ;
                                        NIL operation ;
                                        PAIR }
                                      { DIG 2 ;
                                        DROP ;
                                        DIG 3 ;
                                        DROP ;
                                        DIG 3 ;
                                        DROP ;
                                        SWAP ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        GET ;
                                        IF_NONE { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } {} ;
                                        SWAP ;
                                        CDR ;
                                        SWAP ;
                                        EXEC ;
                                        PUSH string "VoidResult" ;
                                        PAIR ;
                                        FAILWITH } } } }
                          { DIG 4 ;
                            DROP ;
                            IF_LEFT
                              { DIG 2 ;
                                DROP ;
                                DIG 3 ;
                                DROP ;
                                DIG 3 ;
                                DROP ;
                                DIG 3 ;
                                DROP ;
                                IF_LEFT
                                  { IF_LEFT
                                      { SWAP ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        SWAP ;
                                        CDR ;
                                        SWAP ;
                                        EXEC ;
                                        PUSH string "VoidResult" ;
                                        PAIR ;
                                        FAILWITH }
                                      { SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        SENDER ;
                                        COMPARE ;
                                        EQ ;
                                        IF { SWAP } { SWAP ; DROP ; PUSH string "NOT_ADMIN" ; FAILWITH } ;
                                        DUP ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        DUP 3 ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        DUP 4 ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        DIG 5 ;
                                        LEFT address ;
                                        RIGHT unit ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR ;
                                        DIG 2 ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        NIL operation ;
                                        PAIR } }
                                  { IF_LEFT
                                      { SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        SENDER ;
                                        COMPARE ;
                                        EQ ;
                                        IF { SWAP } { SWAP ; DROP ; PUSH string "NOT_ADMIN" ; FAILWITH } ;
                                        DUP ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        CAR ;
                                        DUP 4 ;
                                        CDR ;
                                        CAR ;
                                        PAIR ;
                                        DUP 4 ;
                                        CAR ;
                                        DIG 4 ;
                                        CDR ;
                                        CDR ;
                                        DIG 2 ;
                                        UNPAIR ;
                                        DUP 5 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        GET ;
                                        IF_NONE
                                          { DROP 5 ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                                          { DUP 3 ;
                                            DUP 3 ;
                                            DUP 7 ;
                                            PAIR ;
                                            GET ;
                                            IF_NONE { DUP 4 } { DUP 5 ; ADD } ;
                                            DIG 6 ;
                                            DIG 5 ;
                                            DIG 3 ;
                                            ADD ;
                                            SOME ;
                                            DUP 4 ;
                                            UPDATE ;
                                            DIG 3 ;
                                            DIG 2 ;
                                            SOME ;
                                            DIG 3 ;
                                            DIG 4 ;
                                            PAIR ;
                                            UPDATE ;
                                            PAIR } ;
                                        UNPAIR ;
                                        DUP 3 ;
                                        CDR ;
                                        DUP 4 ;
                                        CAR ;
                                        CDR ;
                                        DUP 5 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        DIG 3 ;
                                        PAIR ;
                                        DUP 5 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        PAIR ;
                                        DIG 4 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR ;
                                        DUP ;
                                        CDR ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        DIG 3 ;
                                        PAIR ;
                                        PAIR ;
                                        SWAP ;
                                        CAR ;
                                        PAIR ;
                                        NIL operation ;
                                        PAIR }
                                      { SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        SENDER ;
                                        COMPARE ;
                                        EQ ;
                                        IF { SWAP } { SWAP ; DROP ; PUSH string "NOT_ADMIN" ; FAILWITH } ;
                                        DUP ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CDR ;
                                        DUP 3 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        DUP 4 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        DIG 5 ;
                                        PAIR ;
                                        DIG 4 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR ;
                                        NIL operation ;
                                        PAIR } } }
                              { IF_LEFT
                                  { DIG 4 ;
                                    DROP ;
                                    DIG 4 ;
                                    DROP ;
                                    IF_LEFT
                                      { DIG 4 ;
                                        DROP ;
                                        SWAP ;
                                        DUG 2 ;
                                        DUP 3 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        SENDER ;
                                        COMPARE ;
                                        EQ ;
                                        IF { DIG 2 } { DIG 2 ; DROP ; PUSH string "NOT_ADMIN" ; FAILWITH } ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        DUP 4 ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        CAR ;
                                        COMPARE ;
                                        GT ;
                                        DUP 3 ;
                                        DIG 4 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        COMPARE ;
                                        LT ;
                                        OR ;
                                        IF { DROP ; PUSH string "OUT_OF_BOUND_QUORUM_THRESHOLD" ; FAILWITH } {} ;
                                        DUP ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        DIG 3 ;
                                        PAIR ;
                                        DUP 3 ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        CAR ;
                                        PAIR ;
                                        DUP 3 ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        PAIR ;
                                        DIG 2 ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        NIL operation ;
                                        PAIR }
                                      { SWAP ;
                                        DUG 2 ;
                                        DUP 3 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        SENDER ;
                                        COMPARE ;
                                        EQ ;
                                        IF { DIG 2 } { DIG 2 ; DROP ; PUSH string "NOT_ADMIN" ; FAILWITH } ;
                                        DUP ;
                                        CDR ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        PAIR ;
                                        DIG 5 ;
                                        SWAP ;
                                        EXEC ;
                                        NOW ;
                                        PAIR ;
                                        DUP 3 ;
                                        DUP 5 ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        COMPARE ;
                                        GT ;
                                        DUP 4 ;
                                        DIG 5 ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        COMPARE ;
                                        LT ;
                                        OR ;
                                        IF { SWAP ; DROP ; PUSH string "OUT_OF_BOUND_VOTING_PERIOD" ; FAILWITH }
                                           { SWAP } ;
                                        DIG 2 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        CAR ;
                                        PAIR ;
                                        SWAP ;
                                        CAR ;
                                        PAIR ;
                                        DUP ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CDR ;
                                        DUP 3 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        DIG 4 ;
                                        DUP 5 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        DIG 3 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR ;
                                        NIL operation ;
                                        PAIR } }
                                  { IF_LEFT
                                      { DIG 2 ;
                                        DROP ;
                                        DIG 3 ;
                                        DROP ;
                                        DIG 3 ;
                                        DROP ;
                                        DIG 3 ;
                                        DROP ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        SENDER ;
                                        COMPARE ;
                                        EQ ;
                                        IF { SWAP } { SWAP ; DROP ; PUSH string "NOT_ADMIN" ; FAILWITH } ;
                                        DUP ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        DUP 3 ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        DIG 4 ;
                                        PAIR ;
                                        DUP 4 ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        DIG 2 ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        NIL operation ;
                                        PAIR }
                                      { SWAP ;
                                        DUG 2 ;
                                        SWAP ;
                                        DROP ;
                                        SENDER ;
                                        DUP 3 ;
                                        CDR ;
                                        CDR ;
                                        DUP 4 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        PAIR ;
                                        DIG 7 ;
                                        SWAP ;
                                        EXEC ;
                                        DUP 4 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        DUP 3 ;
                                        GET ;
                                        IF_NONE
                                          { DROP 2 ;
                                            DIG 3 ;
                                            DROP ;
                                            DIG 3 ;
                                            DROP ;
                                            PUSH unit Unit ;
                                            PUSH string "NOT_ENOUGH_FROZEN_TOKENS" ;
                                            PAIR ;
                                            FAILWITH }
                                          { SWAP ;
                                            PAIR ;
                                            DIG 5 ;
                                            SWAP ;
                                            EXEC ;
                                            DUP 3 ;
                                            PAIR ;
                                            DIG 5 ;
                                            SWAP ;
                                            EXEC ;
                                            DUP 4 ;
                                            CAR ;
                                            CAR ;
                                            CAR ;
                                            CDR ;
                                            CDR ;
                                            SWAP ;
                                            SOME ;
                                            DIG 2 ;
                                            UPDATE } ;
                                        DUP 3 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        DUP 4 ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        PAIR ;
                                        DUP 4 ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        DUP 5 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        CAR ;
                                        PAIR ;
                                        SENDER ;
                                        DIG 4 ;
                                        DIG 2 ;
                                        UNPAIR ;
                                        DIG 4 ;
                                        UNPAIR ;
                                        DUG 3 ;
                                        PAIR ;
                                        DUP 5 ;
                                        DUP 5 ;
                                        DIG 2 ;
                                        UNPAIR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        DUP 6 ;
                                        PAIR ;
                                        GET ;
                                        IF_NONE
                                          { DROP ;
                                            DIG 2 ;
                                            DROP ;
                                            PUSH nat 0 ;
                                            DUP 3 ;
                                            COMPARE ;
                                            EQ ;
                                            IF { SWAP ; DROP ; PAIR }
                                               { DROP ;
                                                 SWAP ;
                                                 DROP ;
                                                 PUSH nat 0 ;
                                                 SWAP ;
                                                 PAIR ;
                                                 PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                                                 PAIR ;
                                                 FAILWITH } }
                                          { DUP 6 ;
                                            DUP 3 ;
                                            GET ;
                                            IF_NONE
                                              { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                                              { DUP 5 ;
                                                SWAP ;
                                                SUB ;
                                                ISNAT ;
                                                IF_NONE { PUSH string "NEGATIVE_TOTAL_SUPPLY" ; FAILWITH } {} } ;
                                            DUP 5 ;
                                            DUP 3 ;
                                            SUB ;
                                            ISNAT ;
                                            IF_NONE
                                              { DROP ;
                                                SWAP ;
                                                DROP ;
                                                SWAP ;
                                                DROP ;
                                                DIG 2 ;
                                                DROP ;
                                                DIG 2 ;
                                                DROP ;
                                                SWAP ;
                                                PAIR ;
                                                PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                                                PAIR ;
                                                FAILWITH }
                                              { DIG 2 ;
                                                DROP ;
                                                DIG 4 ;
                                                DROP ;
                                                DIG 5 ;
                                                DIG 2 ;
                                                SOME ;
                                                DUP 4 ;
                                                UPDATE ;
                                                DIG 3 ;
                                                DIG 2 ;
                                                SOME ;
                                                DIG 3 ;
                                                DIG 4 ;
                                                PAIR ;
                                                UPDATE ;
                                                PAIR } } ;
                                        UNPAIR ;
                                        DIG 2 ;
                                        PAIR ;
                                        DIG 3 ;
                                        DIG 3 ;
                                        DIG 2 ;
                                        UNPAIR ;
                                        DUP 5 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        GET ;
                                        IF_NONE
                                          { DROP 5 ; PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH }
                                          { DUP 3 ;
                                            DUP 3 ;
                                            DUP 7 ;
                                            PAIR ;
                                            GET ;
                                            IF_NONE { DUP 4 } { DUP 5 ; ADD } ;
                                            DIG 6 ;
                                            DIG 5 ;
                                            DIG 3 ;
                                            ADD ;
                                            SOME ;
                                            DUP 4 ;
                                            UPDATE ;
                                            DIG 3 ;
                                            DIG 2 ;
                                            SOME ;
                                            DIG 3 ;
                                            DIG 4 ;
                                            PAIR ;
                                            UPDATE ;
                                            PAIR } ;
                                        UNPAIR ;
                                        DUP 4 ;
                                        CDR ;
                                        DUP 5 ;
                                        CAR ;
                                        CDR ;
                                        DUP 6 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        DIG 3 ;
                                        PAIR ;
                                        DUP 6 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        PAIR ;
                                        DIG 5 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR ;
                                        DUP ;
                                        CDR ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        DIG 3 ;
                                        PAIR ;
                                        PAIR ;
                                        SWAP ;
                                        CAR ;
                                        PAIR ;
                                        DUP ;
                                        CDR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        CDR ;
                                        DUP 3 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        DIG 4 ;
                                        DUP 5 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        PAIR ;
                                        DIG 4 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR ;
                                        NIL operation ;
                                        PAIR } } } } }
                      { DIG 4 ;
                        DROP ;
                        DIG 5 ;
                        DROP ;
                        DIG 5 ;
                        DROP ;
                        ITER { DUP ;
                               CDR ;
                               IF_NONE
                                 { SWAP ; SENDER ; DIG 2 ; CAR ; PAIR ; PAIR }
                                 { DUG 2 ;
                                   CAR ;
                                   DUP ;
                                   DUG 3 ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   DUP 3 ;
                                   CAR ;
                                   CDR ;
                                   CDR ;
                                   PUSH nat 1 ;
                                   DUP 5 ;
                                   CAR ;
                                   CDR ;
                                   CAR ;
                                   CDR ;
                                   CDR ;
                                   ADD ;
                                   DUP 5 ;
                                   CAR ;
                                   CDR ;
                                   CAR ;
                                   CDR ;
                                   CAR ;
                                   PAIR ;
                                   DUP 5 ;
                                   CAR ;
                                   CDR ;
                                   CAR ;
                                   CAR ;
                                   PAIR ;
                                   PAIR ;
                                   DUP 4 ;
                                   CAR ;
                                   CAR ;
                                   PAIR ;
                                   PAIR ;
                                   SWAP ;
                                   DIG 2 ;
                                   CAR ;
                                   CDR ;
                                   CAR ;
                                   CDR ;
                                   CDR ;
                                   PAIR ;
                                   SELF_ADDRESS ;
                                   CHAIN_ID ;
                                   PAIR ;
                                   PAIR ;
                                   PACK ;
                                   DIG 2 ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   DUP 3 ;
                                   CAR ;
                                   CHECK_SIGNATURE ;
                                   IF { SWAP ; DROP ; CAR ; HASH_KEY ; IMPLICIT_ACCOUNT ; ADDRESS }
                                      { DROP ; PUSH string "MISSIGNED" ; PAIR ; FAILWITH } ;
                                   DIG 2 ;
                                   PAIR ;
                                   PAIR } ;
                               UNPAIR ;
                               UNPAIR ;
                               DUP 3 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CAR ;
                               SWAP ;
                               CAR ;
                               CDR ;
                               CDR ;
                               CAR ;
                               CDR ;
                               SWAP ;
                               GET ;
                               IF_NONE { PUSH string "PROPOSAL_NOT_EXIST" ; FAILWITH } {} ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               DUP 7 ;
                               DUP 3 ;
                               CDR ;
                               CDR ;
                               DUP 3 ;
                               CAR ;
                               CAR ;
                               CAR ;
                               CAR ;
                               DIG 3 ;
                               CAR ;
                               CDR ;
                               CDR ;
                               CDR ;
                               ADD ;
                               ADD ;
                               SWAP ;
                               CAR ;
                               CDR ;
                               CAR ;
                               CAR ;
                               COMPARE ;
                               LT ;
                               IF { DROP ; PUSH string "MAX_VOTES_REACHED" ; FAILWITH } { DROP } ;
                               DIG 3 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               CDR ;
                               DUP 3 ;
                               CAR ;
                               CAR ;
                               CDR ;
                               CAR ;
                               CDR ;
                               PAIR ;
                               DUP 10 ;
                               SWAP ;
                               EXEC ;
                               PUSH nat 1 ;
                               DIG 2 ;
                               CAR ;
                               CAR ;
                               CDR ;
                               CAR ;
                               ADD ;
                               SWAP ;
                               COMPARE ;
                               EQ ;
                               IF {} { DROP ; PUSH string "VOTING_PERIOD_OVER" ; FAILWITH } ;
                               DIG 3 ;
                               DUP 4 ;
                               CDR ;
                               CAR ;
                               IF { DUP 3 ;
                                    CDR ;
                                    DUP 5 ;
                                    CDR ;
                                    CDR ;
                                    DUP 5 ;
                                    CAR ;
                                    CDR ;
                                    CDR ;
                                    CDR ;
                                    ADD ;
                                    DUP 5 ;
                                    CAR ;
                                    CDR ;
                                    CDR ;
                                    CAR ;
                                    PAIR ;
                                    DUP 5 ;
                                    CAR ;
                                    CDR ;
                                    CAR ;
                                    PAIR ;
                                    DIG 4 ;
                                    CAR ;
                                    CAR ;
                                    PAIR ;
                                    PAIR }
                                  { DUP 3 ;
                                    CDR ;
                                    DUP 4 ;
                                    CAR ;
                                    CDR ;
                                    DUP 5 ;
                                    CAR ;
                                    CAR ;
                                    CDR ;
                                    DUP 6 ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    CDR ;
                                    DUP 8 ;
                                    CDR ;
                                    CDR ;
                                    DIG 7 ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    ADD ;
                                    PAIR ;
                                    PAIR ;
                                    PAIR ;
                                    PAIR } ;
                               DUG 2 ;
                               DUP ;
                               DUG 3 ;
                               DUP 5 ;
                               CDR ;
                               CDR ;
                               PAIR ;
                               PAIR ;
                               DUP 7 ;
                               SWAP ;
                               EXEC ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CAR ;
                               CDR ;
                               CDR ;
                               CDR ;
                               DUP 3 ;
                               CAR ;
                               CDR ;
                               CDR ;
                               CAR ;
                               CDR ;
                               DUP 5 ;
                               CDR ;
                               DIG 6 ;
                               DUP 8 ;
                               CDR ;
                               CAR ;
                               DUP 9 ;
                               CDR ;
                               CDR ;
                               PAIR ;
                               PAIR ;
                               CONS ;
                               DIG 5 ;
                               CAR ;
                               PAIR ;
                               DIG 5 ;
                               CAR ;
                               SWAP ;
                               SOME ;
                               SWAP ;
                               UPDATE ;
                               DUP 4 ;
                               CAR ;
                               CDR ;
                               CDR ;
                               CAR ;
                               CAR ;
                               PAIR ;
                               PAIR ;
                               DUP 3 ;
                               CAR ;
                               CDR ;
                               CAR ;
                               PAIR ;
                               DIG 2 ;
                               CAR ;
                               CAR ;
                               PAIR ;
                               PAIR } ;
                        SWAP ;
                        DROP ;
                        DIG 2 ;
                        DROP ;
                        DIG 2 ;
                        DROP ;
                        NIL operation ;
                        PAIR } } } }
         { DIG 3 ;
           DROP ;
           DIG 3 ;
           DROP ;
           DIG 3 ;
           DROP ;
           DIG 3 ;
           DROP ;
           DIG 3 ;
           DROP ;
           DIG 2 ;
           DUP ;
           DUG 2 ;
           CAR ;
           CAR ;
           CAR ;
           CAR ;
           CAR ;
           SENDER ;
           COMPARE ;
           EQ ;
           IF { SWAP } { SWAP ; DROP ; PUSH string "NOT_ADMIN" ; FAILWITH } ;
           SWAP ;
           DUP ;
           DUG 2 ;
           CAR ;
           CONTRACT %transfer
             (list (pair (address %from_)
                         (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
           IF_NONE
             { DROP 2 ; PUSH string "FAIL_TRANSFER_CONTRACT_TOKENS" ; FAILWITH }
             { PUSH mutez 0 ;
               DIG 3 ;
               CDR ;
               TRANSFER_TOKENS ;
               SWAP ;
               NIL operation ;
               DIG 2 ;
               CONS ;
               PAIR } } ;
       UNPAIR ;
       DUG 2 ;
       PAIR ;
       SWAP ;
       PAIR } 
