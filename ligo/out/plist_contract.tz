parameter (or (or (bytes %delete) (bytes %insert)) (or (bytes %mem) (unit %pop))) ;
storage
  (pair (pair (bool %mem_result)
              (option %plist
                 (pair (bytes %first) (bytes %last) (big_map %map (pair bytes bool) bytes))))
        (option %pop_result bytes)) ;
code { PUSH bool True ;
       SWAP ;
       UNPAIR ;
       IF_LEFT
         { IF_LEFT
             { DUP 2 ;
               CDR ;
               DUP 3 ;
               CAR ;
               CDR ;
               DUP ;
               IF_NONE
                 { DIG 2 ; DIG 4 ; DROP 2 }
                 { SWAP ;
                   DROP ;
                   DUP ;
                   GET 3 ;
                   DUP 2 ;
                   CAR ;
                   COMPARE ;
                   EQ ;
                   IF { DIG 4 ;
                        DROP ;
                        DUP ;
                        CAR ;
                        DIG 3 ;
                        COMPARE ;
                        EQ ;
                        IF { DROP ; NONE (pair bytes bytes (big_map (pair bytes bool) bytes)) }
                           { SOME } }
                      { DUP ;
                        GET 4 ;
                        PUSH bool False ;
                        DUP 5 ;
                        PAIR ;
                        GET ;
                        DUP 2 ;
                        GET 4 ;
                        DUP 7 ;
                        DUP 6 ;
                        PAIR ;
                        GET ;
                        DUP 3 ;
                        GET 4 ;
                        DUP 8 ;
                        DUP 7 ;
                        PAIR ;
                        NONE bytes ;
                        SWAP ;
                        UPDATE ;
                        PUSH bool False ;
                        DUP 7 ;
                        PAIR ;
                        NONE bytes ;
                        SWAP ;
                        UPDATE ;
                        DUP 3 ;
                        IF_NONE
                          { DIG 7 ; DROP ; DUP 4 ; GET 3 }
                          { SWAP ;
                            DUP 3 ;
                            DIG 9 ;
                            DUP 4 ;
                            PAIR ;
                            UPDATE ;
                            DUP 7 ;
                            DUP 6 ;
                            GET 3 ;
                            COMPARE ;
                            EQ ;
                            IF { SWAP } { SWAP ; DROP ; DUP 4 ; GET 3 } } ;
                        DIG 2 ;
                        IF_NONE
                          { DIG 2 ; DIG 5 ; DROP 2 ; SWAP ; DIG 2 ; CAR }
                          { DIG 2 ;
                            DIG 3 ;
                            PUSH bool False ;
                            DUP 4 ;
                            PAIR ;
                            UPDATE ;
                            DIG 5 ;
                            DUP 5 ;
                            CAR ;
                            COMPARE ;
                            EQ ;
                            IF { DIG 3 ; DROP ; SWAP } { SWAP ; DROP ; DIG 2 ; CAR } } ;
                        SWAP ;
                        DUG 2 ;
                        PAIR 3 ;
                        SOME } } ;
               DIG 2 ;
               CAR ;
               CAR }
             { DUP 2 ;
               CDR ;
               DUP 3 ;
               CAR ;
               CDR ;
               IF_NONE
                 { DIG 3 ;
                   DROP ;
                   EMPTY_BIG_MAP (pair bytes bool) bytes ;
                   DUP 3 ;
                   DIG 3 ;
                   PAIR 3 }
                 { DUP ;
                   DUP 4 ;
                   UPDATE 3 ;
                   DUP 2 ;
                   GET 4 ;
                   DUP 3 ;
                   GET 3 ;
                   PUSH bool False ;
                   DUP 7 ;
                   PAIR ;
                   SWAP ;
                   SOME ;
                   SWAP ;
                   UPDATE ;
                   DIG 4 ;
                   DIG 6 ;
                   DIG 4 ;
                   GET 3 ;
                   PAIR ;
                   SWAP ;
                   SOME ;
                   SWAP ;
                   UPDATE ;
                   UPDATE 4 } ;
               SOME ;
               DIG 2 ;
               CAR ;
               CAR } }
         { IF_LEFT
             { DIG 2 ;
               DROP ;
               DUP 2 ;
               CDR ;
               DUP 3 ;
               CAR ;
               CDR ;
               DIG 3 ;
               CAR ;
               CDR ;
               IF_NONE
                 { DIG 2 ; DROP ; PUSH bool False }
                 { DUP ;
                   CAR ;
                   DUP 5 ;
                   COMPARE ;
                   EQ ;
                   IF { DIG 3 ; DROP 2 ; PUSH bool True }
                      { GET 4 ; PUSH bool False ; DIG 4 ; PAIR ; MEM } } }
             { DROP ;
               DUP ;
               CAR ;
               CDR ;
               IF_NONE
                 { SWAP ;
                   DROP ;
                   NONE (pair bytes bytes (big_map (pair bytes bool) bytes)) ;
                   NONE bytes }
                 { DUP ;
                   GET 4 ;
                   DUP 4 ;
                   DUP 3 ;
                   CAR ;
                   PAIR ;
                   GET ;
                   IF_NONE
                     { DIG 2 ; DROP ; NONE (pair bytes bytes (big_map (pair bytes bool) bytes)) }
                     { DUP 2 ;
                       DUP 2 ;
                       UPDATE 1 ;
                       DUP 3 ;
                       GET 4 ;
                       DIG 5 ;
                       DUP 5 ;
                       CAR ;
                       PAIR ;
                       NONE bytes ;
                       SWAP ;
                       UPDATE ;
                       PUSH bool False ;
                       DIG 3 ;
                       PAIR ;
                       NONE bytes ;
                       SWAP ;
                       UPDATE ;
                       UPDATE 4 ;
                       SOME } ;
                   SWAP ;
                   CAR ;
                   SOME } ;
               SWAP ;
               DIG 2 ;
               CAR ;
               CAR } } ;
       PAIR ;
       PAIR ;
       NIL operation ;
       PAIR } 
